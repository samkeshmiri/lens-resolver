{"version":3,"file":"component---src-pages-index-tsxhead.js","mappings":"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","sources":["webpack://site/./src/pages/index.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { MetamaskActions, MetaMaskContext } from '../hooks';\nimport {\n  connectSnap,\n  getSnap,\n  isLocalSnap,\n  sendHello,\n  shouldDisplayReconnectButton,\n} from '../utils';\nimport {\n  ConnectButton,\n  InstallFlaskButton,\n  ReconnectButton,\n  SendHelloButton,\n  Card,\n} from '../components';\nimport { defaultSnapOrigin } from '../config';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  margin-top: 7.6rem;\n  margin-bottom: 7.6rem;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding-left: 2.4rem;\n    padding-right: 2.4rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    width: auto;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.4rem;\n  text-align: center;\n`;\n\nconst Span = styled.span`\n  color: ${(props) => props.theme.colors.primary.default};\n`;\n\nconst Subtitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 0;\n  ${({ theme }) => theme.mediaQueries.small} {\n    font-size: ${({ theme }) => theme.fontSizes.text};\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 64.8rem;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.5rem;\n`;\n\nconst Notice = styled.div`\n  background-color: ${({ theme }) => theme.colors.background.alternative};\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\n  color: ${({ theme }) => theme.colors.text.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  & > * {\n    margin: 0;\n  }\n  ${({ theme }) => theme.mediaQueries.small} {\n    margin-top: 1.2rem;\n    padding: 1.6rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${({ theme }) => theme.colors.error.muted};\n  border: 1px solid ${({ theme }) => theme.colors.error.default};\n  color: ${({ theme }) => theme.colors.error.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-bottom: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding: 1.6rem;\n    margin-bottom: 1.2rem;\n    margin-top: 1.2rem;\n    max-width: 100%;\n  }\n`;\n\nconst Index = () => {\n  const [state, dispatch] = useContext(MetaMaskContext);\n\n  const isMetaMaskReady = isLocalSnap(defaultSnapOrigin)\n    ? state.isFlask\n    : state.snapsDetected;\n\n  const handleConnectClick = async () => {\n    try {\n      await connectSnap();\n      const installedSnap = await getSnap();\n\n      dispatch({\n        type: MetamaskActions.SetInstalled,\n        payload: installedSnap,\n      });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleSendHelloClick = async () => {\n    try {\n      await sendHello();\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  return (\n    <Container>\n      <Heading>\n        Welcome to <Span>template-snap</Span>\n      </Heading>\n      <Subtitle>\n        Get started by editing <code>src/index.ts</code>\n      </Subtitle>\n      <CardContainer>\n        {state.error && (\n          <ErrorMessage>\n            <b>An error happened:</b> {state.error.message}\n          </ErrorMessage>\n        )}\n        {!isMetaMaskReady && (\n          <Card\n            content={{\n              title: 'Install',\n              description:\n                'Snaps is pre-release software only available in MetaMask Flask, a canary distribution for developers with access to upcoming features.',\n              button: <InstallFlaskButton />,\n            }}\n            fullWidth\n          />\n        )}\n        {!state.installedSnap && (\n          <Card\n            content={{\n              title: 'Connect',\n              description:\n                'Get started by connecting to and installing the example snap.',\n              button: (\n                <ConnectButton\n                  onClick={handleConnectClick}\n                  disabled={!isMetaMaskReady}\n                />\n              ),\n            }}\n            disabled={!isMetaMaskReady}\n          />\n        )}\n        {shouldDisplayReconnectButton(state.installedSnap) && (\n          <Card\n            content={{\n              title: 'Reconnect',\n              description:\n                'While connected to a local running snap this button will always be displayed in order to update the snap if a change is made.',\n              button: (\n                <ReconnectButton\n                  onClick={handleConnectClick}\n                  disabled={!state.installedSnap}\n                />\n              ),\n            }}\n            disabled={!state.installedSnap}\n          />\n        )}\n        <Card\n          content={{\n            title: 'Send Hello message',\n            description:\n              'Display a custom message within a confirmation screen in MetaMask.',\n            button: (\n              <SendHelloButton\n                onClick={handleSendHelloClick}\n                disabled={!state.installedSnap}\n              />\n            ),\n          }}\n          disabled={!state.installedSnap}\n          fullWidth={\n            isMetaMaskReady &&\n            Boolean(state.installedSnap) &&\n            !shouldDisplayReconnectButton(state.installedSnap)\n          }\n        />\n        <Notice>\n          <p>\n            Please note that the <b>snap.manifest.json</b> and{' '}\n            <b>package.json</b> must be located in the server root directory and\n            the bundle must be hosted at the location specified by the location\n            field.\n          </p>\n        </Notice>\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"names":["useContext","styled","MetamaskActions","MetaMaskContext","connectSnap","getSnap","isLocalSnap","sendHello","shouldDisplayReconnectButton","ConnectButton","InstallFlaskButton","ReconnectButton","SendHelloButton","Card","defaultSnapOrigin","jsx","_jsx","jsxs","_jsxs","Container","div","withConfig","displayName","theme","mediaQueries","small","Heading","h1","Span","span","props","colors","primary","default","Subtitle","p","fontSizes","large","text","CardContainer","Notice","background","alternative","border","radii","ErrorMessage","error","muted","Index","state","dispatch","isMetaMaskReady","isFlask","snapsDetected","handleConnectClick","installedSnap","type","SetInstalled","payload","e","console","SetError","handleSendHelloClick","children","message","content","title","description","button","fullWidth","onClick","disabled","Boolean"],"sourceRoot":""}