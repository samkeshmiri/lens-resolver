{"version":3,"sources":["../../src/logging.ts"],"sourcesContent":["import { createProjectLogger } from '@metamask/utils';\n\n// The global logger used across the monorepo. Other projects should use this\n// to create a module logger.\nexport const snapsLogger = createProjectLogger('snaps');\n\n/**\n * Log a message. Currently, this is just a wrapper around `console.log`, but\n * the implementation may change in the future. These logs will be included in\n * production builds, so they should be used sparingly, and not contain any\n * sensitive information.\n *\n * This function makes it easy to swap out the logging implementation in all\n * files at once.\n *\n * @param message - The message to log.\n * @param optionalParams - Additional parameters to pass to the logging.\n */\nexport function logInfo(message: string, ...optionalParams: unknown[]): void {\n  // eslint-disable-next-line no-console\n  console.log(message, ...optionalParams);\n}\n\n/**\n * Log an error. Currently, this is just a wrapper around `console.error`, but\n * the implementation may change in the future. These logs will be included in\n * production builds, so they should be used sparingly, and not contain any\n * sensitive information.\n *\n * These logs should always be visible, without requiring the user to enable\n * verbose logging (like setting a `DEBUG` environment variable), as they are\n * important for debugging snaps.\n *\n * This function makes it easy to swap out the logging implementation in all\n * files at once.\n *\n * @param error - The error to log.\n * @param optionalParams - Additional parameters to pass to the logging.\n */\nexport function logError(error: unknown, ...optionalParams: unknown[]): void {\n  // eslint-disable-next-line no-console\n  console.error(error, ...optionalParams);\n}\n\n/**\n * Log a warning. Currently, this is just a wrapper around `console.warn`, but\n * the implementation may change in the future. These logs will be included in\n * production builds, so they should be used sparingly, and not contain any\n * sensitive information.\n *\n * These logs should always be visible, without requiring the user to enable\n * verbose logging (like setting a `DEBUG` environment variable), as they are\n * important for debugging snaps.\n *\n * This function makes it easy to swap out the logging implementation in all\n * files at once.\n *\n * @param message - The message to log.\n * @param optionalParams - Additional parameters to pass to the logging.\n */\nexport function logWarning(\n  message: string,\n  ...optionalParams: unknown[]\n): void {\n  // eslint-disable-next-line no-console\n  console.warn(message, ...optionalParams);\n}\n"],"names":["snapsLogger","logInfo","logError","logWarning","createProjectLogger","message","optionalParams","console","log","error","warn"],"mappings":";;;;;;;;;;;IAIaA,WAAW;eAAXA;;IAcGC,OAAO;eAAPA;;IAqBAC,QAAQ;eAARA;;IAqBAC,UAAU;eAAVA;;;uBA5DoB;AAI7B,MAAMH,cAAcI,IAAAA,0BAAmB,EAAC;AAcxC,SAASH,QAAQI,OAAe,EAAE,GAAGC,cAAyB;IACnE,sCAAsC;IACtCC,QAAQC,GAAG,CAACH,YAAYC;AAC1B;AAkBO,SAASJ,SAASO,KAAc,EAAE,GAAGH,cAAyB;IACnE,sCAAsC;IACtCC,QAAQE,KAAK,CAACA,UAAUH;AAC1B;AAkBO,SAASH,WACdE,OAAe,EACf,GAAGC,cAAyB;IAE5B,sCAAsC;IACtCC,QAAQG,IAAI,CAACL,YAAYC;AAC3B"}