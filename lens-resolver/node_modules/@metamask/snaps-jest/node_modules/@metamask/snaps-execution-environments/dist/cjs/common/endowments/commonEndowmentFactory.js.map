{"version":3,"sources":["../../../../src/common/endowments/commonEndowmentFactory.ts"],"sourcesContent":["import type { SnapId } from '@metamask/snaps-utils';\n\nimport { rootRealmGlobal } from '../globalObject';\nimport consoleEndowment from './console';\nimport crypto from './crypto';\nimport date from './date';\nimport interval from './interval';\nimport math from './math';\nimport network from './network';\nimport textDecoder from './textDecoder';\nimport textEncoder from './textEncoder';\nimport timeout from './timeout';\n\nexport type EndowmentFactoryOptions = {\n  snapId?: SnapId;\n};\n\nexport type EndowmentFactory = {\n  names: readonly string[];\n  factory: (options?: EndowmentFactoryOptions) => { [key: string]: unknown };\n};\n\nexport type CommonEndowmentSpecification = {\n  endowment: unknown;\n  name: string;\n  bind?: boolean;\n};\n\n// Array of common endowments\nconst commonEndowments: CommonEndowmentSpecification[] = [\n  { endowment: AbortController, name: 'AbortController' },\n  { endowment: AbortSignal, name: 'AbortSignal' },\n  { endowment: ArrayBuffer, name: 'ArrayBuffer' },\n  { endowment: atob, name: 'atob', bind: true },\n  { endowment: BigInt, name: 'BigInt' },\n  { endowment: BigInt64Array, name: 'BigInt64Array' },\n  { endowment: BigUint64Array, name: 'BigUint64Array' },\n  { endowment: btoa, name: 'btoa', bind: true },\n  { endowment: DataView, name: 'DataView' },\n  { endowment: Float32Array, name: 'Float32Array' },\n  { endowment: Float64Array, name: 'Float64Array' },\n  { endowment: Int8Array, name: 'Int8Array' },\n  { endowment: Int16Array, name: 'Int16Array' },\n  { endowment: Int32Array, name: 'Int32Array' },\n  { endowment: Uint8Array, name: 'Uint8Array' },\n  { endowment: Uint8ClampedArray, name: 'Uint8ClampedArray' },\n  { endowment: Uint16Array, name: 'Uint16Array' },\n  { endowment: Uint32Array, name: 'Uint32Array' },\n  { endowment: URL, name: 'URL' },\n  { endowment: WebAssembly, name: 'WebAssembly' },\n];\n\n/**\n * Creates a consolidated collection of common endowments.\n * This function will return factories for all common endowments including\n * the additionally attenuated. All hardened with SES.\n *\n * @returns An object with common endowments.\n */\nconst buildCommonEndowments = (): EndowmentFactory[] => {\n  const endowmentFactories: EndowmentFactory[] = [\n    crypto,\n    interval,\n    math,\n    network,\n    timeout,\n    textDecoder,\n    textEncoder,\n    date,\n    consoleEndowment,\n  ];\n\n  commonEndowments.forEach((endowmentSpecification) => {\n    const endowment = {\n      names: [endowmentSpecification.name] as const,\n      factory: () => {\n        const boundEndowment =\n          typeof endowmentSpecification.endowment === 'function' &&\n          endowmentSpecification.bind\n            ? endowmentSpecification.endowment.bind(rootRealmGlobal)\n            : endowmentSpecification.endowment;\n        return {\n          [endowmentSpecification.name]: harden(boundEndowment),\n        } as const;\n      },\n    };\n    endowmentFactories.push(endowment);\n  });\n\n  return endowmentFactories;\n};\n\nexport default buildCommonEndowments;\n"],"names":["commonEndowments","endowment","AbortController","name","AbortSignal","ArrayBuffer","atob","bind","BigInt","BigInt64Array","BigUint64Array","btoa","DataView","Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","URL","WebAssembly","buildCommonEndowments","endowmentFactories","crypto","interval","math","network","timeout","textDecoder","textEncoder","date","consoleEndowment","forEach","endowmentSpecification","names","factory","boundEndowment","rootRealmGlobal","harden","push"],"mappings":";;;;+BA4FA;;;eAAA;;;8BA1FgC;gEACH;+DACV;6DACF;iEACI;6DACJ;gEACG;oEACI;oEACA;gEACJ;;;;;;AAiBpB,6BAA6B;AAC7B,MAAMA,mBAAmD;IACvD;QAAEC,WAAWC;QAAiBC,MAAM;IAAkB;IACtD;QAAEF,WAAWG;QAAaD,MAAM;IAAc;IAC9C;QAAEF,WAAWI;QAAaF,MAAM;IAAc;IAC9C;QAAEF,WAAWK;QAAMH,MAAM;QAAQI,MAAM;IAAK;IAC5C;QAAEN,WAAWO;QAAQL,MAAM;IAAS;IACpC;QAAEF,WAAWQ;QAAeN,MAAM;IAAgB;IAClD;QAAEF,WAAWS;QAAgBP,MAAM;IAAiB;IACpD;QAAEF,WAAWU;QAAMR,MAAM;QAAQI,MAAM;IAAK;IAC5C;QAAEN,WAAWW;QAAUT,MAAM;IAAW;IACxC;QAAEF,WAAWY;QAAcV,MAAM;IAAe;IAChD;QAAEF,WAAWa;QAAcX,MAAM;IAAe;IAChD;QAAEF,WAAWc;QAAWZ,MAAM;IAAY;IAC1C;QAAEF,WAAWe;QAAYb,MAAM;IAAa;IAC5C;QAAEF,WAAWgB;QAAYd,MAAM;IAAa;IAC5C;QAAEF,WAAWiB;QAAYf,MAAM;IAAa;IAC5C;QAAEF,WAAWkB;QAAmBhB,MAAM;IAAoB;IAC1D;QAAEF,WAAWmB;QAAajB,MAAM;IAAc;IAC9C;QAAEF,WAAWoB;QAAalB,MAAM;IAAc;IAC9C;QAAEF,WAAWqB;QAAKnB,MAAM;IAAM;IAC9B;QAAEF,WAAWsB;QAAapB,MAAM;IAAc;CAC/C;AAED;;;;;;CAMC,GACD,MAAMqB,wBAAwB;IAC5B,MAAMC,qBAAyC;QAC7CC,eAAM;QACNC,iBAAQ;QACRC,aAAI;QACJC,gBAAO;QACPC,gBAAO;QACPC,oBAAW;QACXC,oBAAW;QACXC,aAAI;QACJC,gBAAgB;KACjB;IAEDlC,iBAAiBmC,OAAO,CAAC,CAACC;QACxB,MAAMnC,YAAY;YAChBoC,OAAO;gBAACD,uBAAuBjC,IAAI;aAAC;YACpCmC,SAAS;gBACP,MAAMC,iBACJ,OAAOH,uBAAuBnC,SAAS,KAAK,cAC5CmC,uBAAuB7B,IAAI,GACvB6B,uBAAuBnC,SAAS,CAACM,IAAI,CAACiC,6BAAe,IACrDJ,uBAAuBnC,SAAS;gBACtC,OAAO;oBACL,CAACmC,uBAAuBjC,IAAI,CAAC,EAAEsC,OAAOF;gBACxC;YACF;QACF;QACAd,mBAAmBiB,IAAI,CAACzC;IAC1B;IAEA,OAAOwB;AACT;MAEA,WAAeD"}