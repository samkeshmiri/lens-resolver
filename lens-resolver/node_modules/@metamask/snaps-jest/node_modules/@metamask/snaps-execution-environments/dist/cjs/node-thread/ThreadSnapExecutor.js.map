{"version":3,"sources":["../../../src/node-thread/ThreadSnapExecutor.ts"],"sourcesContent":["import ObjectMultiplex from '@metamask/object-multiplex';\nimport { ThreadMessageStream } from '@metamask/post-message-stream';\nimport { logError, SNAP_STREAM_NAMES } from '@metamask/snaps-utils';\nimport pump from 'pump';\n\nimport { BaseSnapExecutor } from '../common/BaseSnapExecutor';\nimport { log } from '../logging';\n\nexport class ThreadSnapExecutor extends BaseSnapExecutor {\n  static initialize() {\n    log('Worker: Connecting to parent.');\n\n    const parentStream = new ThreadMessageStream();\n    const mux = new ObjectMultiplex();\n    pump(parentStream, mux as any, parentStream, (error) => {\n      if (error) {\n        logError(`Parent stream failure, closing worker.`, error);\n      }\n      self.close();\n    });\n\n    const commandStream = mux.createStream(SNAP_STREAM_NAMES.COMMAND);\n    const rpcStream = mux.createStream(SNAP_STREAM_NAMES.JSON_RPC) as any;\n    return new ThreadSnapExecutor(commandStream, rpcStream);\n  }\n}\n"],"names":["ThreadSnapExecutor","BaseSnapExecutor","initialize","log","parentStream","ThreadMessageStream","mux","ObjectMultiplex","pump","error","logError","self","close","commandStream","createStream","SNAP_STREAM_NAMES","COMMAND","rpcStream","JSON_RPC"],"mappings":";;;;+BAQaA;;;eAAAA;;;wEARe;mCACQ;4BACQ;6DAC3B;kCAEgB;yBACb;;;;;;AAEb,MAAMA,2BAA2BC,kCAAgB;IACtD,OAAOC,aAAa;QAClBC,IAAAA,YAAG,EAAC;QAEJ,MAAMC,eAAe,IAAIC,sCAAmB;QAC5C,MAAMC,MAAM,IAAIC,wBAAe;QAC/BC,IAAAA,aAAI,EAACJ,cAAcE,KAAYF,cAAc,CAACK;YAC5C,IAAIA,OAAO;gBACTC,IAAAA,oBAAQ,EAAC,CAAC,sCAAsC,CAAC,EAAED;YACrD;YACAE,KAAKC,KAAK;QACZ;QAEA,MAAMC,gBAAgBP,IAAIQ,YAAY,CAACC,6BAAiB,CAACC,OAAO;QAChE,MAAMC,YAAYX,IAAIQ,YAAY,CAACC,6BAAiB,CAACG,QAAQ;QAC7D,OAAO,IAAIlB,mBAAmBa,eAAeI;IAC/C;AACF"}