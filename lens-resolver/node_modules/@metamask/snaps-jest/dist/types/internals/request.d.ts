import { HandlerType } from '@metamask/snaps-utils';
import type { Page } from 'puppeteer';
import type { CronjobOptions, RequestOptions, SnapRequest, TransactionOptions } from '../types';
/**
 * Send a request to the snap.
 *
 * @param page - The page to send the request from.
 * @param options - The request options.
 * @param options.origin - The origin of the request. Defaults to `metamask.io`.
 * @param handler - The handler to use. Defaults to `onRpcRequest`.
 * @returns The response.
 */
export declare function request(page: Page, { origin, ...options }: RequestOptions, handler?: HandlerType.OnRpcRequest | HandlerType.OnCronjob): SnapRequest;
/**
 * Send a transaction to the snap.
 *
 * @param page - The page to send the transaction from.
 * @param options - The transaction options.
 * @returns The response.
 */
export declare function sendTransaction(page: Page, options: Partial<TransactionOptions>): Promise<{
    id: string;
    response: ({
        result: import("@metamask/utils").Json;
    } | {
        error: import("@metamask/utils").Json;
    }) & Record<"error", unknown>;
    notifications: never[];
    content?: undefined;
} | {
    id: string;
    response: {
        result: import("@metamask/utils").Json;
    };
    notifications: never[];
    content: import("@metamask/snaps-ui").Panel | {
        value: string;
        type: import("@metamask/snaps-ui").NodeType.Copyable;
    } | {
        type: import("@metamask/snaps-ui").NodeType.Divider;
    } | {
        value: string;
        type: import("@metamask/snaps-ui").NodeType.Heading;
    } | {
        type: import("@metamask/snaps-ui").NodeType.Spinner;
    } | {
        value: string;
        type: import("@metamask/snaps-ui").NodeType.Text;
        markdown?: boolean | undefined;
    };
}>;
/**
 * Run a cronjob.
 *
 * @param page - The page to run the cronjob from.
 * @param options - The request options.
 * @returns The response.
 */
export declare function runCronjob(page: Page, options: CronjobOptions): SnapRequest;
