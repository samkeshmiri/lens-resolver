import type { Infer } from 'superstruct';
declare const SnapsEnvironmentOptionsStruct: import("superstruct").Struct<{
    keepAlive: boolean;
    server: {
        port: number;
        root: string;
        enabled: boolean;
    };
    browser: {
        headless: boolean;
    };
    executionEnvironmentUrl?: string | undefined;
    simulatorUrl?: string | undefined;
}, {
    executionEnvironmentUrl: import("superstruct").Struct<string | undefined, null>;
    simulatorUrl: import("superstruct").Struct<string | undefined, null>;
    keepAlive: import("superstruct").Struct<boolean, null>;
    server: import("superstruct").Struct<{
        port: number;
        root: string;
        enabled: boolean;
    }, {
        enabled: import("superstruct").Struct<boolean, null>;
        port: import("superstruct").Struct<number, null>;
        root: import("superstruct").Struct<string, null>;
    }>;
    browser: import("superstruct").Struct<{
        headless: boolean;
    }, {
        headless: import("superstruct").Struct<boolean, null>;
    }>;
}>;
/**
 * The options for the environment. These can be specified in the Jest
 * configuration under `testEnvironmentOptions`.
 *
 * @example
 * ```json
 * {
 *   "testEnvironment": "@metamask/snaps-jest",
 *   "testEnvironmentOptions": {
 *     "executionEnvironmentUrl": "http://localhost:8080",
 *     "server": {
 *       "port": 8080,
 *       /* ... *\/
 *     }
 *   }
 * }
 * ```
 * @property executionEnvironmentUrl - The URL of the execution environment. If
 * this is not provided, the execution environment will be served from the
 * built-in HTTP server.
 * @property simulatorUrl - The URL of the simulator. If this is not provided,
 * the simulator will be served from the built-in HTTP server.
 * @property keepAlive - Whether to keep the browser open after the tests have
 * finished. This is useful for debugging. Defaults to `false`.
 * @property server - The options for the built-in HTTP server.
 * @property server.enabled - Whether to run the built-in HTTP server. Defaults
 * to `true`.
 * @property server.port - The port to use for the built-in HTTP server. If this
 * is not provided, a random available port will be used.
 * @property server.root - The root directory to serve from the built-in HTTP
 * server. Defaults to the current working directory. This is assumed to be the
 * directory containing the snap manifest and `dist` files. If this is a
 * relative path, it will be resolved relative to the current working directory.
 * @property browser - The options for the browser.
 * @property browser.headless - Whether to run the browser in headless mode.
 * Defaults to `true`.
 */
export declare type SnapsEnvironmentOptions = Infer<typeof SnapsEnvironmentOptionsStruct>;
/**
 * Get the environment options. This validates the options, and returns the
 * default options if none are provided.
 *
 * @param testEnvironmentOptions - The test environment options as defined in
 * the Jest configuration.
 * @returns The environment options.
 */
export declare function getOptions(testEnvironmentOptions: Record<string, unknown>): {
    keepAlive: boolean;
    server: {
        port: number;
        root: string;
        enabled: boolean;
    };
    browser: {
        headless: boolean;
    };
    executionEnvironmentUrl?: string | undefined;
    simulatorUrl?: string | undefined;
};
export {};
