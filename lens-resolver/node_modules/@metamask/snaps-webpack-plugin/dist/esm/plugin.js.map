{"version":3,"sources":["../../src/plugin.ts"],"sourcesContent":["import type { PostProcessOptions, SourceMap } from '@metamask/snaps-utils';\nimport {\n  checkManifest,\n  evalBundle,\n  postProcessBundle,\n  useTemporaryFile,\n} from '@metamask/snaps-utils';\nimport { assert } from '@metamask/utils';\nimport pathUtils from 'path';\nimport { promisify } from 'util';\nimport type { Compiler } from 'webpack';\nimport { Compilation, WebpackError } from 'webpack';\nimport { RawSource, SourceMapSource } from 'webpack-sources';\n\nconst PLUGIN_NAME = 'SnapsWebpackPlugin';\n\ntype PluginOptions = {\n  eval?: boolean;\n  manifestPath?: string;\n  writeManifest?: boolean;\n};\n\nexport type Options = PluginOptions &\n  Omit<PostProcessOptions, 'sourceMap' | 'inputSourceMap'>;\n\nexport default class SnapsWebpackPlugin {\n  public readonly options: Partial<Options>;\n\n  /**\n   * Construct an instance of the plugin.\n   *\n   * @param options - The post-process options.\n   * @param options.stripComments - Whether to strip comments. Defaults to\n   * `true`.\n   * @param options.eval - Whether to evaluate the bundle to test SES\n   * compatibility. Defaults to `true`.\n   * @param options.manifestPath - The path to the manifest file. If provided,\n   * the manifest will be validated. Defaults to\n   * `process.cwd() + '/snap.manifest.json'`.\n   * @param options.writeManifest - Whether to fix the manifest.\n   * Defaults to `true`.\n   */\n  constructor(options?: Partial<Options>) {\n    this.options = {\n      eval: true,\n      manifestPath: pathUtils.join(process.cwd(), 'snap.manifest.json'),\n      writeManifest: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Apply the plugin to the Webpack compiler. Hooks into the `processAssets`\n   * stage to process the bundle.\n   *\n   * @param compiler - The Webpack compiler.\n   */\n  apply(compiler: Compiler) {\n    const { devtool } = compiler.options;\n\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {\n      compilation.hooks.processAssets.tap(\n        {\n          name: PLUGIN_NAME,\n          stage: Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY,\n          additionalAssets: true,\n        },\n        (assets) => {\n          Object.keys(assets)\n            .filter((assetName) => assetName.endsWith('.js'))\n            .forEach((assetName) => {\n              const asset = assets[assetName];\n              const source = asset.source() as string;\n              const sourceMap = asset.map();\n\n              const processed = postProcessBundle(source, {\n                ...this.options,\n                sourceMap: Boolean(devtool),\n                inputSourceMap: devtool ? (sourceMap as SourceMap) : undefined,\n              });\n\n              if (processed.warnings.length > 0) {\n                compilation.warnings.push(\n                  new WebpackError(\n                    `${PLUGIN_NAME}: Bundle Warning: Processing of the Snap bundle completed with warnings.\\n${processed.warnings.join(\n                      '\\n',\n                    )}`,\n                  ),\n                );\n              }\n\n              const replacement = processed.sourceMap\n                ? new SourceMapSource(\n                    processed.code,\n                    assetName,\n                    processed.sourceMap,\n                    source,\n                    sourceMap as SourceMap,\n                  )\n                : new RawSource(processed.code);\n\n              // For some reason the type of `RawSource` is not compatible with\n              // Webpack's own `Source`, but works fine when casting it to `any`.\n              compilation.updateAsset(assetName, replacement as any);\n            });\n        },\n      );\n    });\n\n    compiler.hooks.afterEmit.tapPromise(PLUGIN_NAME, async (compilation) => {\n      const file = compilation\n        .getAssets()\n        .find((asset) => asset.name.endsWith('.js'));\n\n      assert(file);\n\n      assert(compilation.outputOptions.path);\n      const outputPath = compilation.outputOptions.path;\n\n      const filePath = pathUtils.join(outputPath, file.name);\n\n      const bundleFile = await promisify(\n        compiler.outputFileSystem.readFile.bind(compiler.outputFileSystem),\n      )(filePath);\n      assert(bundleFile);\n\n      const bundleContent = bundleFile.toString();\n\n      if (this.options.eval) {\n        await useTemporaryFile('snaps-bundle.js', bundleContent, (path) =>\n          evalBundle(path),\n        );\n      }\n\n      if (this.options.manifestPath) {\n        const { errors, warnings } = await checkManifest(\n          pathUtils.dirname(this.options.manifestPath),\n          this.options.writeManifest,\n          bundleContent,\n          promisify(\n            compiler.outputFileSystem.writeFile.bind(compiler.outputFileSystem),\n          ),\n        );\n\n        if (!this.options.writeManifest && errors.length > 0) {\n          throw new Error(\n            `Manifest Error: The manifest is invalid.\\n${errors.join('\\n')}`,\n          );\n        }\n\n        if (warnings.length > 0) {\n          compilation.warnings.push(\n            new WebpackError(\n              `${PLUGIN_NAME}: Manifest Warning: Validation of snap.manifest.json completed with warnings.\\n${warnings.join(\n                '\\n',\n              )}`,\n            ),\n          );\n        }\n      }\n    });\n  }\n}\n"],"names":["checkManifest","evalBundle","postProcessBundle","useTemporaryFile","assert","pathUtils","promisify","Compilation","WebpackError","RawSource","SourceMapSource","PLUGIN_NAME","SnapsWebpackPlugin","apply","compiler","devtool","options","hooks","compilation","tap","processAssets","name","stage","PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY","additionalAssets","assets","Object","keys","filter","assetName","endsWith","forEach","asset","source","sourceMap","map","processed","Boolean","inputSourceMap","undefined","warnings","length","push","join","replacement","code","updateAsset","afterEmit","tapPromise","file","getAssets","find","outputOptions","path","outputPath","filePath","bundleFile","outputFileSystem","readFile","bind","bundleContent","toString","eval","manifestPath","errors","dirname","writeManifest","writeFile","Error","constructor","process","cwd"],"mappings":"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"}