import type { PostProcessOptions } from '@metamask/snaps-utils';
import type { Compiler } from 'webpack';
declare type PluginOptions = {
    eval?: boolean;
    manifestPath?: string;
    writeManifest?: boolean;
};
export declare type Options = PluginOptions & Omit<PostProcessOptions, 'sourceMap' | 'inputSourceMap'>;
export default class SnapsWebpackPlugin {
    readonly options: Partial<Options>;
    /**
     * Construct an instance of the plugin.
     *
     * @param options - The post-process options.
     * @param options.stripComments - Whether to strip comments. Defaults to
     * `true`.
     * @param options.eval - Whether to evaluate the bundle to test SES
     * compatibility. Defaults to `true`.
     * @param options.manifestPath - The path to the manifest file. If provided,
     * the manifest will be validated. Defaults to
     * `process.cwd() + '/snap.manifest.json'`.
     * @param options.writeManifest - Whether to fix the manifest.
     * Defaults to `true`.
     */
    constructor(options?: Partial<Options>);
    /**
     * Apply the plugin to the Webpack compiler. Hooks into the `processAssets`
     * stage to process the bundle.
     *
     * @param compiler - The Webpack compiler.
     */
    apply(compiler: Compiler): void;
}
export {};
