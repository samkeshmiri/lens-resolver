"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "PromptDialog", {
    enumerable: true,
    get: function() {
        return PromptDialog;
    }
});
var _jsxruntime = require("react/jsx-runtime");
var _react = require("@chakra-ui/react");
var _reacthookform = require("react-hook-form");
var _renderer = require("../../features/renderer");
var _Delineator = require("../Delineator");
var _Window = require("../Window");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
var PromptDialog = function(param) {
    var snapName = param.snapName, snapId = param.snapId, placeholder = param.placeholder, node = param.node, onCancel = param.onCancel, onSubmit = param.onSubmit;
    var _useForm = (0, _reacthookform.useForm)({
        defaultValues: {
            value: ""
        }
    }), handleSubmit = _useForm.handleSubmit, register = _useForm.register, errors = _useForm.formState.errors;
    var onFormSubmit = function(data) {
        var _onSubmit;
        (_onSubmit = onSubmit) === null || _onSubmit === void 0 ? void 0 : _onSubmit(data.value);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Window.Window, {
        snapName: snapName,
        snapId: snapId,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Box, {
                margin: "4",
                marginTop: "0",
                flex: "1",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Delineator.Delineator, {
                    snapName: snapName,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_renderer.Renderer, {
                            node: node
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("form", {
                            onSubmit: handleSubmit(onFormSubmit),
                            id: "prompt-form",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.FormControl, {
                                marginTop: "3",
                                isInvalid: Boolean(errors.value),
                                /* eslint-disable-next-line @typescript-eslint/naming-convention */ sx: {
                                    "& input": {
                                        marginBottom: "0"
                                    }
                                },
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Input, _object_spread({
                                    placeholder: placeholder
                                }, register("value")))
                            })
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Flex, {
                borderTop: "1px solid",
                borderTopColor: "border.default",
                paddingTop: "4",
                paddingX: "4",
                gap: "4",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Button, {
                        variant: "outline",
                        flex: "1",
                        onClick: onCancel,
                        children: "Cancel"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Button, {
                        type: "submit",
                        form: "prompt-form",
                        variant: "primary",
                        flex: "1",
                        children: "Submit"
                    })
                ]
            })
        ]
    });
};
