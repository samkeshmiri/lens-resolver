"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    MOCK_SNAP_SOURCE: function() {
        return MOCK_SNAP_SOURCE;
    },
    MOCK_SNAP_SOURCE_FILE: function() {
        return MOCK_SNAP_SOURCE_FILE;
    },
    MOCK_SNAP_ICON: function() {
        return MOCK_SNAP_ICON;
    },
    MOCK_SNAP_ICON_FILE: function() {
        return MOCK_SNAP_ICON_FILE;
    }
});
var _snapsutils = require("@metamask/snaps-utils");
var _utils = require("@metamask/utils");
var MOCK_SNAP_SOURCE = '\nmodule.exports.onRpcRequest = ({ request }) => {\n  console.log("Hello, world!");\n\n  const { method, id } = request;\n  return method + id;\n};\n';
var MOCK_SNAP_SOURCE_FILE = new _snapsutils.VirtualFile((0, _utils.stringToBytes)(MOCK_SNAP_SOURCE));
MOCK_SNAP_SOURCE_FILE.path = "dist/bundle.js";
MOCK_SNAP_SOURCE_FILE.data = {
    canonicalPath: "local:http://localhost:8080/".concat(MOCK_SNAP_SOURCE_FILE.path)
};
var MOCK_SNAP_ICON = "foo";
var MOCK_SNAP_ICON_FILE = new _snapsutils.VirtualFile((0, _utils.stringToBytes)(MOCK_SNAP_ICON));
MOCK_SNAP_ICON_FILE.path = "images/icon.svg";
MOCK_SNAP_ICON_FILE.data = {
    canonicalPath: "local:http://localhost:8080/".concat(MOCK_SNAP_ICON_FILE.path)
};
