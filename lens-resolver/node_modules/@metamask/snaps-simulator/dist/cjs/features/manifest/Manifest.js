"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Manifest", {
    enumerable: true,
    get: function() {
        return Manifest;
    }
});
var _jsxruntime = require("react/jsx-runtime");
var _react = require("@chakra-ui/react");
var _components = require("../../components");
var _hooks = require("../../hooks");
var _simulation = require("../simulation");
var _components1 = require("./components");
var Manifest = function() {
    var manifest = (0, _hooks.useSelector)(_simulation.getSnapManifest);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Flex, {
        width: "100%",
        direction: "column",
        overflow: "hidden",
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Flex, {
            direction: "row",
            flex: "1",
            overflow: "hidden",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Flex, {
                    direction: "column",
                    flex: "1",
                    width: "50%",
                    overflow: "hidden",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Tabs, {
                        display: "flex",
                        flexDirection: "column",
                        flex: "1",
                        overflow: "hidden",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.TabList, {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Tab, {
                                    children: "Validation"
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.TabPanels, {
                                display: "flex",
                                flexDirection: "column",
                                flex: "1",
                                overflow: "hidden",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.TabPanel, {
                                    display: "flex",
                                    flexDirection: "column",
                                    flex: "1",
                                    padding: "0",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_components1.Validation, {})
                                })
                            })
                        ]
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Box, {
                    display: "flex",
                    flexDirection: "column",
                    flex: "1",
                    width: "50%",
                    borderLeft: "1px solid",
                    borderColor: "border.default",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Tabs, {
                        display: "flex",
                        flexDirection: "column",
                        flex: "1",
                        overflow: "hidden",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.TabList, {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Tab, {
                                    children: "Manifest"
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.TabPanels, {
                                display: "flex",
                                flexDirection: "column",
                                flex: "1",
                                overflow: "hidden",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.TabPanel, {
                                    display: "flex",
                                    flexDirection: "column",
                                    flex: "1",
                                    padding: "0",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.Editor, {
                                        border: "none",
                                        value: JSON.stringify(manifest, null, 2),
                                        options: {
                                            readOnly: true,
                                            wordWrap: "on"
                                        }
                                    })
                                })
                            })
                        ]
                    })
                })
            ]
        })
    });
};
