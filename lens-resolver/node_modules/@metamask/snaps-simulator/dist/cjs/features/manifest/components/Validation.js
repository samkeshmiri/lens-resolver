"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Validation", {
    enumerable: true,
    get: function() {
        return Validation;
    }
});
var _jsxruntime = require("react/jsx-runtime");
var _react = require("@chakra-ui/react");
var _components = require("../../../components");
var _hooks = require("../../../hooks");
var _simulation = require("../../simulation");
var _slice = require("../slice");
var _Item = require("./Item");
var Validation = function() {
    var manifest = (0, _hooks.useSelector)(_simulation.getSnapManifest);
    var results = (0, _hooks.useSelector)(_slice.getManifestResults);
    if (!manifest) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Center, {
            background: "background.alternative",
            flex: "1",
            flexDirection: "column",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.Icon, {
                    icon: "moon",
                    width: "34px",
                    height: "auto",
                    marginBottom: "1.5"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Heading, {
                    as: "h3",
                    fontSize: "sm",
                    fontWeight: "700",
                    color: "text.muted",
                    marginBottom: "1",
                    children: "Manifest can't be found"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Text, {
                    fontSize: "xs",
                    textAlign: "center",
                    color: "text.muted",
                    children: [
                        "Make sure youâ€™re connected to the snap",
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("br", {}),
                        "and have a ",
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("i", {
                            children: "snap.manifest.json"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("br", {}),
                        "file in the root of your repository."
                    ]
                })
            ]
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.List, {
        children: results.map(function(param) {
            var name = param.name, manifestName = param.manifestName, isValid = param.isValid, message = param.message;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Item.Item, {
                name: name,
                manifestName: manifestName,
                isValid: isValid,
                message: message
            }, name);
        })
    });
};
