"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Response", {
    enumerable: true,
    get: function() {
        return Response;
    }
});
var _jsxruntime = require("react/jsx-runtime");
var _react = require("@chakra-ui/react");
var _snapsutils = require("@metamask/snaps-utils");
var _components = require("../../../components");
var _hooks = require("../../../hooks");
var _configuration = require("../../configuration");
var _renderer = require("../../renderer");
var _simulation = require("../../simulation");
var Response = function() {
    var _response_result;
    var handler = (0, _hooks.useHandler)();
    var response = (0, _hooks.useSelector)(function(state) {
        return state[handler].response;
    });
    var snapId = (0, _hooks.useSelector)(_configuration.getSnapId);
    var snapName = (0, _hooks.useSelector)(_simulation.getSnapName);
    if (!response) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Center, {
            background: "background.alternative",
            flex: "1",
            flexDirection: "column",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.Icon, {
                    icon: "computer",
                    width: "34px",
                    height: "auto",
                    marginBottom: "1.5"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Heading, {
                    as: "h3",
                    fontSize: "sm",
                    fontWeight: "700",
                    color: "text.muted",
                    marginBottom: "1",
                    children: "No response yet"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Text, {
                    fontSize: "xs",
                    textAlign: "center",
                    color: "text.muted",
                    children: [
                        "Create a request via the",
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("br", {}),
                        "left-side config to get started."
                    ]
                })
            ]
        });
    }
    // TODO: Fix this type cast.
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion
    var content = (_response_result = response.result) === null || _response_result === void 0 ? void 0 : _response_result.content;
    if (handler === _snapsutils.HandlerType.OnTransaction && content) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Box, {
            margin: "4",
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.Window, {
                snapName: snapName,
                snapId: snapId,
                showAuthorship: false,
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Box, {
                    margin: "4",
                    flex: "1",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Skeleton, {
                            height: "38px",
                            mb: "4",
                            speed: 3
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Skeleton, {
                            height: "285px",
                            mb: "4",
                            speed: 3
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.Delineator, {
                            snapName: snapName,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_renderer.Renderer, {
                                node: content
                            })
                        })
                    ]
                })
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.Editor, {
        border: "none",
        value: JSON.stringify(response, null, 2),
        options: {
            readOnly: true,
            wordWrap: "on"
        }
    });
};
