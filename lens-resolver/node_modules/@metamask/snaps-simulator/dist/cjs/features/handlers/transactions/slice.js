"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    INITIAL_STATE: function() {
        return INITIAL_STATE;
    },
    transactions: function() {
        return transactions;
    },
    setTransactionRequest: function() {
        return setTransactionRequest;
    },
    setTransactionRequestFromHistory: function() {
        return setTransactionRequestFromHistory;
    },
    setTransactionResponse: function() {
        return setTransactionResponse;
    },
    clearTransactionResponse: function() {
        return clearTransactionResponse;
    },
    getTransactionRequest: function() {
        return getTransactionRequest;
    }
});
var _snapsutils = require("@metamask/snaps-utils");
var _toolkit = require("@reduxjs/toolkit");
var _slice = require("../slice");
var INITIAL_STATE = {
    request: {},
    response: null,
    history: []
};
var slice = (0, _slice.createHandlerSlice)({
    name: _snapsutils.HandlerType.OnTransaction,
    initialState: INITIAL_STATE
});
var transactions = slice.reducer;
var _slice_actions = slice.actions;
var setTransactionRequest = _slice_actions.setRequest, setTransactionRequestFromHistory = _slice_actions.setRequestFromHistory, setTransactionResponse = _slice_actions.setResponse, clearTransactionResponse = _slice_actions.clearResponse;
var getTransactionRequest = (0, _toolkit.createSelector)(function(state) {
    return state[_snapsutils.HandlerType.OnTransaction];
}, function(state) {
    return state.request;
});
