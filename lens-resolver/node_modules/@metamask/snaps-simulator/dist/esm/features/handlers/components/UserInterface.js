import { jsx as _jsx } from "react/jsx-runtime";
import { useTabsContext } from "@chakra-ui/react";
import { DialogType } from "@metamask/rpc-methods";
import { useEffect } from "react";
import { AlertDialog, ConfirmationDialog, PromptDialog } from "../../../components";
import { useDispatch, useSelector } from "../../../hooks";
import { getUserInterface, resolveUserInterface } from "../../simulation";
export var UserInterface = function() {
    var dispatch = useDispatch();
    var ui = useSelector(getUserInterface);
    var tab = useTabsContext();
    useEffect(function() {
        tab.setSelectedIndex(1);
    }, [
        tab
    ]);
    if (!ui) {
        return null;
    }
    var snapName = ui.snapName, snapId = ui.snapId, type = ui.type, node = ui.node;
    switch(type){
        case DialogType.Alert:
            {
                var handleClose = function() {
                    dispatch(resolveUserInterface(null));
                };
                return /*#__PURE__*/ _jsx(AlertDialog, {
                    snapName: snapName,
                    snapId: snapId,
                    node: node,
                    onClose: handleClose
                });
            }
        case DialogType.Confirmation:
            {
                var handleCancel = function() {
                    dispatch(resolveUserInterface(false));
                };
                var handleApprove = function() {
                    dispatch(resolveUserInterface(true));
                };
                return /*#__PURE__*/ _jsx(ConfirmationDialog, {
                    snapName: snapName,
                    snapId: snapId,
                    node: node,
                    onCancel: handleCancel,
                    onApprove: handleApprove
                });
            }
        case DialogType.Prompt:
            {
                var handleCancel1 = function() {
                    dispatch(resolveUserInterface(null));
                };
                var handleSubmit = function(value) {
                    dispatch(resolveUserInterface(value));
                };
                return /*#__PURE__*/ _jsx(PromptDialog, {
                    snapName: snapName,
                    snapId: snapId,
                    node: node,
                    onCancel: handleCancel1,
                    onSubmit: handleSubmit
                });
            }
        default:
            return null;
    }
};
