function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { createElement as _createElement } from "react";
import { Box, Flex, Text } from "@chakra-ui/react";
import { TRANSACTION_PRESETS } from "../presets";
import { TransactionPrefill } from "./TransactionPrefill";
export var TransactionPrefills = function(param) {
    var onClick = param.onClick;
    return /*#__PURE__*/ _jsxs(Box, {
        marginBottom: "4",
        children: [
            /*#__PURE__*/ _jsx(Text, {
                fontWeight: "500",
                fontSize: "xs",
                marginBottom: "1",
                children: "Transaction presets"
            }),
            /*#__PURE__*/ _jsx(Flex, {
                gap: "2",
                children: TRANSACTION_PRESETS.map(function(param, index) {
                    var name = param.name, transaction = param.transaction;
                    return /*#__PURE__*/ _createElement(TransactionPrefill, _object_spread_props(_object_spread({
                        name: name
                    }, transaction), {
                        key: "transaction-prefill-".concat(index),
                        onClick: onClick
                    }));
                })
            })
        ]
    });
};
