function _array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function _iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function _non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _sliced_to_array(arr, i) {
    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
}
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Box, Flex, Tab, TabList, TabPanel, TabPanels, Tabs } from "@chakra-ui/react";
import { useState } from "react";
import { Outlet } from "react-router-dom";
import { TestConditional } from "../../../components";
import { useSelector } from "../../../hooks";
import { IS_TEST_BUILD } from "../../../utils";
import { getUserInterface } from "../../simulation";
import { History } from "./History";
import { PlayButton } from "./PlayButton";
import { ResetTab } from "./ResetTab";
import { ResetUserInterfaceTab } from "./ResetUserInterfaceTab";
import { Response } from "./Response";
import { UserInterface } from "./UserInterface";
export var Handler = function() {
    var _useState = _sliced_to_array(useState(0), 2), tab = _useState[0], setTab = _useState[1];
    var userInterface = useSelector(getUserInterface);
    return /*#__PURE__*/ _jsx(Flex, {
        width: "100%",
        direction: "column",
        overflow: "hidden",
        children: /*#__PURE__*/ _jsxs(Flex, {
            direction: "row",
            flex: "1",
            overflow: "hidden",
            children: [
                /*#__PURE__*/ _jsx(TestConditional, {
                    isTest: false,
                    children: /*#__PURE__*/ _jsx(Flex, {
                        direction: "column",
                        flex: "1",
                        width: "50%",
                        overflow: "hidden",
                        children: /*#__PURE__*/ _jsxs(Tabs, {
                            display: "flex",
                            flexDirection: "column",
                            flex: "1",
                            overflow: "hidden",
                            isLazy: true,
                            onChange: setTab,
                            children: [
                                /*#__PURE__*/ _jsx(ResetTab, {}),
                                /*#__PURE__*/ _jsxs(TabList, {
                                    alignItems: "center",
                                    children: [
                                        /*#__PURE__*/ _jsx(Tab, {
                                            children: "Request"
                                        }),
                                        /*#__PURE__*/ _jsx(Tab, {
                                            children: "History"
                                        }),
                                        tab === 0 && /*#__PURE__*/ _jsx(Box, {
                                            marginLeft: "auto",
                                            children: /*#__PURE__*/ _jsx(PlayButton, {})
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ _jsxs(TabPanels, {
                                    display: "flex",
                                    flexDirection: "column",
                                    flex: "1",
                                    overflow: "hidden",
                                    children: [
                                        /*#__PURE__*/ _jsx(TabPanel, {
                                            display: "flex",
                                            flexDirection: "column",
                                            flex: "1",
                                            overflowY: "auto",
                                            "data-testid": "tab-request",
                                            children: /*#__PURE__*/ _jsx(Outlet, {})
                                        }),
                                        /*#__PURE__*/ _jsx(TabPanel, {
                                            padding: "0",
                                            display: "flex",
                                            flexDirection: "column",
                                            flex: "1",
                                            overflowY: "auto",
                                            children: /*#__PURE__*/ _jsx(History, {})
                                        })
                                    ]
                                })
                            ]
                        })
                    })
                }),
                /*#__PURE__*/ _jsx(Box, {
                    display: "flex",
                    flexDirection: "column",
                    flex: "1",
                    width: "50%",
                    borderLeft: IS_TEST_BUILD ? "none" : "1px solid",
                    borderColor: "border.default",
                    children: /*#__PURE__*/ _jsxs(Tabs, {
                        display: "flex",
                        flexDirection: "column",
                        flex: "1",
                        overflow: "hidden",
                        children: [
                            /*#__PURE__*/ _jsx(ResetTab, {}),
                            /*#__PURE__*/ _jsx(ResetUserInterfaceTab, {}),
                            /*#__PURE__*/ _jsxs(TabList, {
                                children: [
                                    /*#__PURE__*/ _jsx(Tab, {
                                        children: "Response"
                                    }),
                                    userInterface && /*#__PURE__*/ _jsx(Tab, {
                                        children: "UI"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ _jsxs(TabPanels, {
                                display: "flex",
                                flexDirection: "column",
                                flex: "1",
                                overflow: "hidden",
                                children: [
                                    /*#__PURE__*/ _jsx(TabPanel, {
                                        display: "flex",
                                        flexDirection: "column",
                                        flex: "1",
                                        padding: "0",
                                        "data-testid": "tab-response",
                                        children: /*#__PURE__*/ _jsx(Response, {})
                                    }),
                                    userInterface && /*#__PURE__*/ _jsx(TabPanel, {
                                        overflowY: "auto",
                                        "data-testid": "tab-ui",
                                        children: /*#__PURE__*/ _jsx(UserInterface, {})
                                    })
                                ]
                            })
                        ]
                    })
                })
            ]
        })
    });
};
