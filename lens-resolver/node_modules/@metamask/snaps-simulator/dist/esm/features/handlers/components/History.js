function _array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _array_without_holes(arr) {
    if (Array.isArray(arr)) return _array_like_to_array(arr);
}
function _iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _to_consumable_array(arr) {
    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
}
function _unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
}
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Center, Heading, List, Text } from "@chakra-ui/react";
import { Icon } from "../../../components";
import { useHandler, useSelector } from "../../../hooks";
import { HistoryItem } from "./HistoryItem";
export var History = function() {
    var handler = useHandler();
    var history = useSelector(function(state) {
        return state[handler].history;
    });
    var sortedHistory = _to_consumable_array(history).sort(function(a, b) {
        return b.date.getTime() - a.date.getTime();
    });
    if (sortedHistory.length === 0) {
        return /*#__PURE__*/ _jsxs(Center, {
            background: "background.alternative",
            flex: "1",
            flexDirection: "column",
            children: [
                /*#__PURE__*/ _jsx(Icon, {
                    icon: "moon",
                    width: "34px",
                    height: "auto",
                    marginBottom: "1.5"
                }),
                /*#__PURE__*/ _jsx(Heading, {
                    as: "h3",
                    fontSize: "sm",
                    fontWeight: "700",
                    color: "text.muted",
                    marginBottom: "1",
                    children: "No history yet"
                }),
                /*#__PURE__*/ _jsxs(Text, {
                    fontSize: "xs",
                    textAlign: "center",
                    color: "text.muted",
                    children: [
                        "Create a request via the",
                        /*#__PURE__*/ _jsx("br", {}),
                        "request tab to get started."
                    ]
                })
            ]
        });
    }
    return /*#__PURE__*/ _jsx(List, {
        children: sortedHistory.map(function(item, index) {
            return /*#__PURE__*/ _jsx(HistoryItem, {
                item: item
            }, "history-item-".concat(index));
        })
    });
};
