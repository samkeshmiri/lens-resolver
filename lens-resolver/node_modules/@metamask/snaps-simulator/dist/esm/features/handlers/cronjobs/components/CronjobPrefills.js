import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Box, Flex, Text } from "@chakra-ui/react";
import { useSelector } from "../../../../hooks";
import { getSnapManifest } from "../../../simulation";
import { CronjobPrefill } from "./CronjobPrefill";
export var CronjobPrefills = function(param) {
    var onClick = param.onClick;
    var _manifest_initialPermissions_endowmentcronjob, _manifest_initialPermissions, _manifest, _jobs;
    var manifest = useSelector(getSnapManifest);
    var jobs = (_manifest = manifest) === null || _manifest === void 0 ? void 0 : (_manifest_initialPermissions = _manifest.initialPermissions) === null || _manifest_initialPermissions === void 0 ? void 0 : (_manifest_initialPermissions_endowmentcronjob = _manifest_initialPermissions["endowment:cronjob"]) === null || _manifest_initialPermissions_endowmentcronjob === void 0 ? void 0 : _manifest_initialPermissions_endowmentcronjob.jobs;
    if (!((_jobs = jobs) === null || _jobs === void 0 ? void 0 : _jobs.length)) {
        return null;
    }
    return /*#__PURE__*/ _jsxs(Box, {
        marginBottom: "4",
        children: [
            /*#__PURE__*/ _jsx(Text, {
                fontWeight: "500",
                fontSize: "xs",
                marginBottom: "1",
                children: "Manifest cronjobs"
            }),
            /*#__PURE__*/ _jsx(Flex, {
                gap: "2",
                children: jobs.map(function(param, index) {
                    var _param_request = param.request, method = _param_request.method, params = _param_request.params;
                    return /*#__PURE__*/ _jsx(CronjobPrefill, {
                        method: method,
                        params: params,
                        onClick: onClick
                    }, "cronjob-prefill-".concat(index));
                })
            })
        ]
    });
};
