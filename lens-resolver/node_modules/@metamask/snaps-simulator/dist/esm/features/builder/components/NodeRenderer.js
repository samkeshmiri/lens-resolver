import { jsx as _jsx } from "react/jsx-runtime";
import { Box } from "@chakra-ui/react";
import { useMemo } from "react";
import { useSelector } from "react-redux";
import { Delineator, Window } from "../../../components";
import { getSnapId } from "../../configuration";
import { Renderer } from "../../renderer";
import { getSnapName } from "../../simulation";
import { nodeModelsToComponent } from "../utils";
/**
 * A node renderer, which renders the result of a node tree. The tree is
 * converted to a component, which is then rendered in the MetaMask window.
 *
 * @param props - The props of the component.
 * @param props.items - The items to render in the tree.
 * @returns A node renderer component.
 */ export var NodeRenderer = function(param) {
    var items = param.items;
    var snapId = useSelector(getSnapId);
    var _useSelector;
    var snapName = (_useSelector = useSelector(getSnapName)) !== null && _useSelector !== void 0 ? _useSelector : "Unknown";
    var node = useMemo(function() {
        return nodeModelsToComponent(items);
    }, [
        items
    ]);
    return /*#__PURE__*/ _jsx(Window, {
        snapName: snapName,
        snapId: snapId,
        children: /*#__PURE__*/ _jsx(Box, {
            margin: "4",
            marginTop: "0",
            flex: "1",
            children: /*#__PURE__*/ _jsx(Delineator, {
                snapName: snapName,
                children: /*#__PURE__*/ _jsx(Renderer, {
                    node: node
                })
            })
        })
    });
};
