import { jsx as _jsx } from "react/jsx-runtime";
import { Box } from "@chakra-ui/react";
import { NodeType } from "@metamask/snaps-ui";
import { assert } from "@metamask/utils";
import { BaseNode } from "./BaseNode";
import { EditableNode } from "./EditableNode";
export var EDITABLE_NODES = [
    NodeType.Heading,
    NodeType.Text,
    NodeType.Copyable
];
/**
 * A node, which renders a component in the builder. The node can be editable or
 * non-editable.
 *
 * @param props - The props of the component.
 * @param props.node - The node to render.
 * @param props.depth - The depth of the node in the tree.
 * @param props.isDragging - Whether the node is being dragged.
 * @param props.onChange - A function to call when the node changes.
 * @param props.onClose - A function to call when the node is closed.
 * @returns A node component.
 */ export var Node = function(param) {
    var node = param.node, depth = param.depth, isDragging = param.isDragging, onChange = param.onChange, onClose = param.onClose;
    var _node_data;
    assert((_node_data = node.data) === null || _node_data === void 0 ? void 0 : _node_data.type, "Node must have a type.");
    if (EDITABLE_NODES.includes(node.data.type)) {
        return /*#__PURE__*/ _jsx(EditableNode, {
            node: node,
            depth: depth,
            isDragging: isDragging,
            onChange: onChange,
            onClose: onClose
        });
    }
    return /*#__PURE__*/ _jsx(Box, {
        marginLeft: "".concat(depth * 16, "px"),
        children: /*#__PURE__*/ _jsx(BaseNode, {
            node: node,
            isDragging: isDragging,
            onClose: onClose
        })
    });
};
