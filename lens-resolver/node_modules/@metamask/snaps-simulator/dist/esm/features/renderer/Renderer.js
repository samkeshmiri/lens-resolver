function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
import { jsx as _jsx } from "react/jsx-runtime";
import { NodeType } from "@metamask/snaps-ui";
import { Copyable, Panel, Text, Divider, Heading, Spinner } from "./components";
var _obj;
export var components = (_obj = {}, _define_property(_obj, NodeType.Copyable, Copyable), _define_property(_obj, NodeType.Divider, Divider), _define_property(_obj, NodeType.Heading, Heading), _define_property(_obj, NodeType.Panel, Panel), _define_property(_obj, NodeType.Spinner, Spinner), _define_property(_obj, NodeType.Text, Text), _obj);
/**
 * A UI renderer for Snaps UI.
 *
 * @param props - The component props.
 * @param props.node - The component to render.
 * @param props.id - The component ID, to be used as a prefix for component
 * keys.
 * @returns The renderer component.
 */ export var Renderer = function(param) {
    var node = param.node, _param_id = param.id, id = _param_id === void 0 ? "root" : _param_id;
    var ReactComponent = components[node.type];
    if (!ReactComponent) {
        throw new Error("Unknown component type: ".concat(node.type, "."));
    }
    return /*#__PURE__*/ _jsx(ReactComponent, {
        id: id,
        node: node
    });
};
