function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
import { jsx as _jsx, Fragment as _Fragment } from "react/jsx-runtime";
import { Text } from "@chakra-ui/react";
import { useSelector } from "../../hooks";
import { ConsoleEntryType, getConsoleEntries } from "./slice";
export var ConsoleContent = function() {
    var entries = useSelector(getConsoleEntries);
    var _obj;
    var colors = (_obj = {}, _define_property(_obj, ConsoleEntryType.Log, "text.console"), _define_property(_obj, ConsoleEntryType.Error, "text.error"), _obj);
    return /*#__PURE__*/ _jsx(_Fragment, {
        children: entries.map(function(entry) {
            return /*#__PURE__*/ _jsx(Text, {
                textColor: colors[entry.type],
                fontFamily: "code",
                fontSize: "xs",
                whiteSpace: "pre-wrap",
                children: entry.message
            }, entry.date);
        })
    });
};
