import { useToast } from "@chakra-ui/react";
import { useEffect } from "react";
import { useDispatch, useSelector } from "../../hooks";
import { getNotifications, removeNotification } from "./slice";
export var Notifications = function() {
    var dispatch = useDispatch();
    var notifications = useSelector(getNotifications);
    var toast = useToast();
    useEffect(function() {
        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
        try {
            for(var _iterator = notifications[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
                var notification = _step.value;
                toast({
                    position: "top",
                    description: notification.message
                });
                dispatch(removeNotification(notification.id));
            }
        } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
        } finally{
            try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                }
            } finally{
                if (_didIteratorError) {
                    throw _iteratorError;
                }
            }
        }
    }, [
        notifications,
        dispatch,
        toast
    ]);
    return null;
};
