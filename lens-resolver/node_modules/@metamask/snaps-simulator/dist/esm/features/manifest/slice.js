import { createAction, createSelector, createSlice } from "@reduxjs/toolkit";
export var ManifestStatus;
(function(ManifestStatus) {
    ManifestStatus["Valid"] = "valid";
    ManifestStatus["Invalid"] = "invalid";
    ManifestStatus["Unknown"] = "unknown";
})(ManifestStatus || (ManifestStatus = {}));
export var INITIAL_MANIFEST_STATE = {
    valid: ManifestStatus.Unknown,
    results: []
};
var slice = createSlice({
    name: "manifest",
    initialState: INITIAL_MANIFEST_STATE,
    reducers: {
        setValid: function setValid(state, action) {
            state.valid = action.payload;
        },
        setResults: function setResults(state, action) {
            state.results = action.payload;
        }
    }
});
export var validateManifest = createAction("".concat(slice.name, "/validateManifest"));
var _slice_actions = slice.actions;
export var setValid = _slice_actions.setValid, setResults = _slice_actions.setResults;
export var manifest = slice.reducer;
export var getManifestStatus = createSelector(function(state) {
    return state.manifest;
}, function(state) {
    return state.valid;
});
export var getManifestResults = createSelector(function(state) {
    return state.manifest;
}, function(state) {
    return state.results;
});
