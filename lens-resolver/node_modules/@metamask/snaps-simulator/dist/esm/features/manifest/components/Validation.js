import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Center, Heading, List, Text } from "@chakra-ui/react";
import { Icon } from "../../../components";
import { useSelector } from "../../../hooks";
import { getSnapManifest } from "../../simulation";
import { getManifestResults } from "../slice";
import { Item } from "./Item";
export var Validation = function() {
    var manifest = useSelector(getSnapManifest);
    var results = useSelector(getManifestResults);
    if (!manifest) {
        return /*#__PURE__*/ _jsxs(Center, {
            background: "background.alternative",
            flex: "1",
            flexDirection: "column",
            children: [
                /*#__PURE__*/ _jsx(Icon, {
                    icon: "moon",
                    width: "34px",
                    height: "auto",
                    marginBottom: "1.5"
                }),
                /*#__PURE__*/ _jsx(Heading, {
                    as: "h3",
                    fontSize: "sm",
                    fontWeight: "700",
                    color: "text.muted",
                    marginBottom: "1",
                    children: "Manifest can't be found"
                }),
                /*#__PURE__*/ _jsxs(Text, {
                    fontSize: "xs",
                    textAlign: "center",
                    color: "text.muted",
                    children: [
                        "Make sure youâ€™re connected to the snap",
                        /*#__PURE__*/ _jsx("br", {}),
                        "and have a ",
                        /*#__PURE__*/ _jsx("i", {
                            children: "snap.manifest.json"
                        }),
                        /*#__PURE__*/ _jsx("br", {}),
                        "file in the root of your repository."
                    ]
                })
            ]
        });
    }
    return /*#__PURE__*/ _jsx(List, {
        children: results.map(function(param) {
            var name = param.name, manifestName = param.manifestName, isValid = param.isValid, message = param.message;
            return /*#__PURE__*/ _jsx(Item, {
                name: name,
                manifestName: manifestName,
                isValid: isValid,
                message: message
            }, name);
        })
    });
};
