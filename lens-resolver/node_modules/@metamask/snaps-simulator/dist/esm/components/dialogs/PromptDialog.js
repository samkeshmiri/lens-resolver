function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Box, Button, Flex, FormControl, Input } from "@chakra-ui/react";
import { useForm } from "react-hook-form";
import { Renderer } from "../../features/renderer";
import { Delineator } from "../Delineator";
import { Window } from "../Window";
/**
 * Snap prompt dialog.
 *
 * @param props - The component props.
 * @param props.snapName - The snap name.
 * @param props.snapId - The snap ID.
 * @param props.placeholder - The placeholder text.
 * @param props.node - The component to render.
 * @param props.onCancel - The cancel callback.
 * @param props.onSubmit - The submit callback. The value is passed as the first
 * argument.
 * @returns The component.
 */ export var PromptDialog = function(param) {
    var snapName = param.snapName, snapId = param.snapId, placeholder = param.placeholder, node = param.node, onCancel = param.onCancel, onSubmit = param.onSubmit;
    var _useForm = useForm({
        defaultValues: {
            value: ""
        }
    }), handleSubmit = _useForm.handleSubmit, register = _useForm.register, errors = _useForm.formState.errors;
    var onFormSubmit = function(data) {
        var _onSubmit;
        (_onSubmit = onSubmit) === null || _onSubmit === void 0 ? void 0 : _onSubmit(data.value);
    };
    return /*#__PURE__*/ _jsxs(Window, {
        snapName: snapName,
        snapId: snapId,
        children: [
            /*#__PURE__*/ _jsx(Box, {
                margin: "4",
                marginTop: "0",
                flex: "1",
                children: /*#__PURE__*/ _jsxs(Delineator, {
                    snapName: snapName,
                    children: [
                        /*#__PURE__*/ _jsx(Renderer, {
                            node: node
                        }),
                        /*#__PURE__*/ _jsx("form", {
                            onSubmit: handleSubmit(onFormSubmit),
                            id: "prompt-form",
                            children: /*#__PURE__*/ _jsx(FormControl, {
                                marginTop: "3",
                                isInvalid: Boolean(errors.value),
                                /* eslint-disable-next-line @typescript-eslint/naming-convention */ sx: {
                                    "& input": {
                                        marginBottom: "0"
                                    }
                                },
                                children: /*#__PURE__*/ _jsx(Input, _object_spread({
                                    placeholder: placeholder
                                }, register("value")))
                            })
                        })
                    ]
                })
            }),
            /*#__PURE__*/ _jsxs(Flex, {
                borderTop: "1px solid",
                borderTopColor: "border.default",
                paddingTop: "4",
                paddingX: "4",
                gap: "4",
                children: [
                    /*#__PURE__*/ _jsx(Button, {
                        variant: "outline",
                        flex: "1",
                        onClick: onCancel,
                        children: "Cancel"
                    }),
                    /*#__PURE__*/ _jsx(Button, {
                        type: "submit",
                        form: "prompt-form",
                        variant: "primary",
                        flex: "1",
                        children: "Submit"
                    })
                ]
            })
        ]
    });
};
