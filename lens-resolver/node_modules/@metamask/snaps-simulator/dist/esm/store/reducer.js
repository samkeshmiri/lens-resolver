function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
import { HandlerType } from "@metamask/snaps-utils";
import { combineReducers } from "@reduxjs/toolkit";
// We have to import the reducers like this to avoid circular dependencies.
import { configuration } from "../features/configuration/slice";
import { console } from "../features/console/slice";
import { cronjob } from "../features/handlers/cronjobs/slice";
import { jsonRpc } from "../features/handlers/json-rpc/slice";
import { transactions } from "../features/handlers/transactions/slice";
import { manifest } from "../features/manifest/slice";
import { notifications } from "../features/notifications/slice";
import { simulation } from "../features/simulation/slice";
var _obj;
export var reducer = combineReducers((_obj = {
    configuration: configuration,
    console: console,
    manifest: manifest,
    notifications: notifications,
    simulation: simulation
}, _define_property(_obj, HandlerType.OnRpcRequest, jsonRpc), _define_property(_obj, HandlerType.OnCronjob, cronjob), _define_property(_obj, HandlerType.OnTransaction, transactions), _obj));
