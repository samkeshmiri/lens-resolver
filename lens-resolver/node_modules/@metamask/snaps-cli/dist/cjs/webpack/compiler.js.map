{"version":3,"sources":["../../../src/webpack/compiler.ts"],"sourcesContent":["import type { Server } from 'http';\nimport { createServer } from 'http';\nimport type { AddressInfo } from 'net';\nimport serveMiddleware from 'serve-handler';\nimport { webpack } from 'webpack';\n\nimport type { ProcessedConfig, ProcessedWebpackConfig } from '../config';\nimport type { WebpackOptions } from './config';\nimport { getDefaultConfiguration } from './config';\n\n/**\n * Get a Webpack compiler for the given config.\n *\n * @param config - The config object.\n * @param options - The Webpack options.\n * @returns The Webpack compiler.\n */\nexport async function getCompiler(\n  config: ProcessedWebpackConfig,\n  options?: WebpackOptions,\n) {\n  const baseWebpackConfig = await getDefaultConfiguration(config, options);\n  const webpackConfig =\n    config.customizeWebpackConfig?.(baseWebpackConfig) ?? baseWebpackConfig;\n\n  return webpack(webpackConfig);\n}\n\n/**\n * Get a static server for development purposes.\n *\n * Note: We're intentionally not using `webpack-dev-server` here because it\n * adds a lot of extra stuff to the output that we don't need, and it's\n * difficult to customize.\n *\n * @param config - The config object.\n * @returns An object with a `listen` method that returns a promise that\n * resolves when the server is listening.\n */\nexport function getServer(config: ProcessedConfig) {\n  const server = createServer((request, response) => {\n    serveMiddleware(request, response, {\n      public: config.server.root,\n      headers: [\n        {\n          source: '**/*',\n          headers: [\n            {\n              key: 'Cache-Control',\n              value: 'no-cache',\n            },\n            {\n              key: 'Access-Control-Allow-Origin',\n              value: '*',\n            },\n          ],\n        },\n      ],\n    })?.catch(\n      /* istanbul ignore next */ () => {\n        response.statusCode = 500;\n        response.end();\n      },\n    );\n  });\n\n  /**\n   * Start the server on the port specified in the config.\n   *\n   * @param port - The port to listen on.\n   * @returns A promise that resolves when the server is listening. The promise\n   * resolves to an object with the port and the server instance. Note that if\n   * the `config.server.port` is `0`, the OS will choose a random port for us,\n   * so we need to get the port from the server after it starts.\n   */\n  const listen = async (port = config.server.port) => {\n    return new Promise<{\n      port: number;\n      server: Server;\n      close: () => Promise<void>;\n    }>((resolve, reject) => {\n      try {\n        server.listen(port, () => {\n          const close = async () => {\n            await new Promise<void>((resolveClose, rejectClose) => {\n              server.close((closeError) => {\n                if (closeError) {\n                  return rejectClose(closeError);\n                }\n\n                return resolveClose();\n              });\n            });\n          };\n\n          const address = server.address() as AddressInfo;\n          resolve({ port: address.port, server, close });\n        });\n      } catch (listenError) {\n        reject(listenError);\n      }\n    });\n  };\n\n  return { listen };\n}\n"],"names":["getCompiler","getServer","config","options","baseWebpackConfig","getDefaultConfiguration","webpackConfig","customizeWebpackConfig","webpack","server","createServer","request","response","serveMiddleware","public","root","headers","source","key","value","catch","statusCode","end","listen","port","Promise","resolve","reject","close","resolveClose","rejectClose","closeError","address","listenError"],"mappings":";;;;;;;;;;;IAiBsBA,WAAW;eAAXA;;IAsBNC,SAAS;eAATA;;;sBAtCa;qEAED;yBACJ;wBAIgB;;;;;;AASjC,eAAeD,YACpBE,MAA8B,EAC9BC,OAAwB;IAExB,MAAMC,oBAAoB,MAAMC,IAAAA,+BAAuB,EAACH,QAAQC;IAChE,MAAMG,gBACJJ,OAAOK,sBAAsB,GAAGH,sBAAsBA;IAExD,OAAOI,IAAAA,gBAAO,EAACF;AACjB;AAaO,SAASL,UAAUC,MAAuB;IAC/C,MAAMO,SAASC,IAAAA,kBAAY,EAAC,CAACC,SAASC;QACpCC,IAAAA,qBAAe,EAACF,SAASC,UAAU;YACjCE,QAAQZ,OAAOO,MAAM,CAACM,IAAI;YAC1BC,SAAS;gBACP;oBACEC,QAAQ;oBACRD,SAAS;wBACP;4BACEE,KAAK;4BACLC,OAAO;wBACT;wBACA;4BACED,KAAK;4BACLC,OAAO;wBACT;qBACD;gBACH;aACD;QACH,IAAIC,MACF,wBAAwB,GAAG;YACzBR,SAASS,UAAU,GAAG;YACtBT,SAASU,GAAG;QACd;IAEJ;IAEA;;;;;;;;GAQC,GACD,MAAMC,SAAS,OAAOC,OAAOtB,OAAOO,MAAM,CAACe,IAAI;QAC7C,OAAO,IAAIC,QAIR,CAACC,SAASC;YACX,IAAI;gBACFlB,OAAOc,MAAM,CAACC,MAAM;oBAClB,MAAMI,QAAQ;wBACZ,MAAM,IAAIH,QAAc,CAACI,cAAcC;4BACrCrB,OAAOmB,KAAK,CAAC,CAACG;gCACZ,IAAIA,YAAY;oCACd,OAAOD,YAAYC;gCACrB;gCAEA,OAAOF;4BACT;wBACF;oBACF;oBAEA,MAAMG,UAAUvB,OAAOuB,OAAO;oBAC9BN,QAAQ;wBAAEF,MAAMQ,QAAQR,IAAI;wBAAEf;wBAAQmB;oBAAM;gBAC9C;YACF,EAAE,OAAOK,aAAa;gBACpBN,OAAOM;YACT;QACF;IACF;IAEA,OAAO;QAAEV;IAAO;AAClB"}