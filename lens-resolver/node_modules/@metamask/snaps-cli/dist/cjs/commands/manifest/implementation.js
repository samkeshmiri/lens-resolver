"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "manifest", {
    enumerable: true,
    get: function() {
        return manifest;
    }
});
const _snapsutils = require("@metamask/snaps-utils");
const _chalk = require("chalk");
const _path = require("path");
const _utils = require("../../utils");
async function manifest(path, write, spinner) {
    const { warnings, errors, updated } = await (0, _snapsutils.checkManifest)((0, _path.dirname)(path), write);
    if (write && updated) {
        (0, _utils.info)('The snap manifest file has been updated.', spinner);
    }
    if (!write && errors.length > 0) {
        const formattedErrors = errors.map((manifestError)=>(0, _snapsutils.indent)((0, _chalk.red)(`• ${manifestError}`))).join('\n');
        (0, _utils.error)(`The snap manifest file is invalid.\n\n${formattedErrors}\n\nRun the command with the \`--fix\` flag to attempt to fix the manifest.`, spinner);
        spinner?.stop();
        process.exitCode = 1;
        return false;
    }
    if (warnings.length > 0) {
        const formattedWarnings = warnings.map((manifestWarning)=>(0, _snapsutils.indent)((0, _chalk.yellow)(`• ${manifestWarning}`)));
        (0, _utils.warn)(`The snap manifest file has warnings.\n\n${formattedWarnings.join('\n')}`, spinner);
    }
    return true;
}

//# sourceMappingURL=implementation.js.map