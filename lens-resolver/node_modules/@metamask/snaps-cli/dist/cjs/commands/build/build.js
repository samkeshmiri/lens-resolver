"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "buildHandler", {
    enumerable: true,
    get: function() {
        return buildHandler;
    }
});
const _snapsutils = require("@metamask/snaps-utils");
const _path = require("path");
const _errors = require("../../errors");
const _utils = require("../../utils");
const _eval = require("../eval");
const _implementation = require("./implementation");
const steps = [
    {
        name: 'Checking the input file.',
        task: async ({ config })=>{
            const { input } = config;
            if (!await (0, _snapsutils.isFile)(input)) {
                throw new _errors.CommandError(`Input file not found: "${input}". Make sure that the "input" field in your snap config is correct.`);
            }
        }
    },
    {
        name: 'Building the snap bundle.',
        task: async ({ config, spinner })=>{
            // We don't evaluate the bundle here, because it's done in a separate
            // step.
            return await (0, _implementation.build)(config, {
                evaluate: false,
                spinner
            });
        }
    },
    {
        name: 'Evaluating the snap bundle.',
        condition: ({ config })=>config.evaluate,
        task: async ({ config, spinner })=>{
            const path = (0, _path.resolve)(process.cwd(), config.output.path, config.output.filename);
            await (0, _eval.evaluate)(path);
            (0, _utils.info)(`Snap bundle evaluated successfully.`, spinner);
        }
    }
];
async function buildHandler(config) {
    return await (0, _utils.executeSteps)(steps, {
        config
    });
}

//# sourceMappingURL=build.js.map