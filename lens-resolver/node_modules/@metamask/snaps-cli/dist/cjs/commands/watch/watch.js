"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "watchHandler", {
    enumerable: true,
    get: function() {
        return watchHandler;
    }
});
const _snapsutils = require("@metamask/snaps-utils");
const _errors = require("../../errors");
const _utils = require("../../utils");
const _webpack = require("../../webpack");
const _implementation = require("./implementation");
const steps = [
    {
        name: 'Checking the input file.',
        task: async ({ config })=>{
            const { input } = config;
            if (!await (0, _snapsutils.isFile)(input)) {
                throw new _errors.CommandError(`Input file not found: "${input}". Make sure that the "input" field in your snap config is correct.`);
            }
        }
    },
    {
        name: 'Starting the development server.',
        condition: ({ config })=>config.server.enabled,
        task: async ({ config, options, spinner })=>{
            const server = (0, _webpack.getServer)(config);
            const { port } = await server.listen(options.port ?? config.server.port);
            (0, _utils.info)(`The server is listening on http://localhost:${port}.`, spinner);
        }
    },
    {
        name: 'Building the snap bundle.',
        task: async ({ config, spinner })=>{
            await (0, _implementation.watch)(config, {
                spinner
            });
        }
    }
];
async function watchHandler(config, options) {
    await (0, _utils.executeSteps)(steps, {
        config,
        options
    });
}

//# sourceMappingURL=watch.js.map