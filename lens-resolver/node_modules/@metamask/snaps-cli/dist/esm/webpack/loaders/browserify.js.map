{"version":3,"sources":["../../../../src/webpack/loaders/browserify.ts"],"sourcesContent":["import browserify from 'browserify';\nimport { Readable } from 'stream';\nimport type { LoaderDefinitionFunction } from 'webpack';\n\nimport { TranspilationModes } from '../../builders';\nimport type { LegacyOptions } from '../../config';\nimport { processDependencies } from '../../utils';\nimport { getBrowserslistTargets } from '../utils';\n\n/**\n * A Browserify loader for Webpack. This exists for backwards compatibility with\n * the legacy configuration format, in order to support the `bundlerCustomizer`\n * function.\n *\n * When this loader is used, the input file will be processed by Browserify, and\n * written to disk by Webpack. Most processing will be handled by Browserify, so\n * there are no benefits like tree-shaking.\n *\n * @param content - The input file contents as a string.\n * @param sourceMap - The source map of the input file.\n */\nconst loader: LoaderDefinitionFunction<LegacyOptions> = async function (\n  content,\n  sourceMap,\n) {\n  const config = this.getOptions();\n\n  const { transpilationMode } = config;\n\n  const bundler = browserify({\n    extensions: ['.js', '.ts'],\n    debug: Boolean(sourceMap),\n    standalone: '<snap>',\n  });\n\n  if (transpilationMode !== TranspilationModes.None) {\n    const babelifyOptions = processDependencies(config);\n\n    // We need to statically import all Browserify transforms, and all Babel\n    // presets and plugins, and calling `require` is the sanest way to do that.\n    /* eslint-disable @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires, n/global-require */\n    bundler.transform(require('babelify'), {\n      global: transpilationMode === TranspilationModes.LocalAndDeps,\n      extensions: ['.js', '.ts'],\n      presets: [\n        require('@babel/preset-typescript'),\n        [\n          require('@babel/preset-env'),\n          {\n            targets: {\n              browsers: await getBrowserslistTargets(),\n            },\n          },\n        ],\n      ],\n      plugins: [\n        require('@babel/plugin-transform-runtime'),\n        require('@babel/plugin-proposal-class-properties'),\n        require('@babel/plugin-proposal-private-methods'),\n        require('@babel/plugin-proposal-class-static-block'),\n        require('@babel/plugin-proposal-private-property-in-object'),\n      ],\n      ...(babelifyOptions as any),\n    });\n    /* eslint-enable @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires, n/global-require */\n  }\n\n  config.bundlerCustomizer?.(bundler);\n\n  // Browserify doesn't accept a string as an entry point, so we need to convert\n  // it to a stream.\n  const stream = new Readable();\n  stream.push(content);\n  stream.push(null);\n\n  bundler.add(stream, {\n    file: this.resourcePath,\n  });\n\n  return new Promise<Buffer>((resolve, reject) => {\n    bundler.bundle((bundleError, buffer: Buffer) => {\n      if (bundleError) {\n        reject(bundleError);\n        return;\n      }\n\n      // Browserify inlines the source map, so we just pass the output buffer back\n      // to Webpack.\n      resolve(buffer);\n    });\n  });\n};\n\nexport default loader;\n"],"names":["browserify","Readable","TranspilationModes","processDependencies","getBrowserslistTargets","loader","content","sourceMap","config","getOptions","transpilationMode","bundler","extensions","debug","Boolean","standalone","None","babelifyOptions","transform","require","global","LocalAndDeps","presets","targets","browsers","plugins","bundlerCustomizer","stream","push","add","file","resourcePath","Promise","resolve","reject","bundle","bundleError","buffer"],"mappings":"AAAA,OAAOA,gBAAgB,aAAa;AACpC,SAASC,QAAQ,QAAQ,SAAS;AAGlC,SAASC,kBAAkB,QAAQ,iBAAiB;AAEpD,SAASC,mBAAmB,QAAQ,cAAc;AAClD,SAASC,sBAAsB,QAAQ,WAAW;AAElD;;;;;;;;;;;CAWC,GACD,MAAMC,SAAkD,eACtDC,OAAO,EACPC,SAAS;IAET,MAAMC,SAAS,IAAI,CAACC,UAAU;IAE9B,MAAM,EAAEC,iBAAiB,EAAE,GAAGF;IAE9B,MAAMG,UAAUX,WAAW;QACzBY,YAAY;YAAC;YAAO;SAAM;QAC1BC,OAAOC,QAAQP;QACfQ,YAAY;IACd;IAEA,IAAIL,sBAAsBR,mBAAmBc,IAAI,EAAE;QACjD,MAAMC,kBAAkBd,oBAAoBK;QAE5C,wEAAwE;QACxE,2EAA2E;QAC3E,8GAA8G,GAC9GG,QAAQO,SAAS,CAACC,QAAQ,aAAa;YACrCC,QAAQV,sBAAsBR,mBAAmBmB,YAAY;YAC7DT,YAAY;gBAAC;gBAAO;aAAM;YAC1BU,SAAS;gBACPH,QAAQ;gBACR;oBACEA,QAAQ;oBACR;wBACEI,SAAS;4BACPC,UAAU,MAAMpB;wBAClB;oBACF;iBACD;aACF;YACDqB,SAAS;gBACPN,QAAQ;gBACRA,QAAQ;gBACRA,QAAQ;gBACRA,QAAQ;gBACRA,QAAQ;aACT;YACD,GAAIF,eAAe;QACrB;IACA,6GAA6G,GAC/G;IAEAT,OAAOkB,iBAAiB,GAAGf;IAE3B,8EAA8E;IAC9E,kBAAkB;IAClB,MAAMgB,SAAS,IAAI1B;IACnB0B,OAAOC,IAAI,CAACtB;IACZqB,OAAOC,IAAI,CAAC;IAEZjB,QAAQkB,GAAG,CAACF,QAAQ;QAClBG,MAAM,IAAI,CAACC,YAAY;IACzB;IAEA,OAAO,IAAIC,QAAgB,CAACC,SAASC;QACnCvB,QAAQwB,MAAM,CAAC,CAACC,aAAaC;YAC3B,IAAID,aAAa;gBACfF,OAAOE;gBACP;YACF;YAEA,4EAA4E;YAC5E,cAAc;YACdH,QAAQI;QACV;IACF;AACF;AAEA,eAAehC,OAAO"}