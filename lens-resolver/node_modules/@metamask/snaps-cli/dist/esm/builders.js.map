{"version":3,"sources":["../../src/builders.ts"],"sourcesContent":["import type { Options } from 'yargs';\n\nexport enum TranspilationModes {\n  LocalAndDeps = 'localAndDeps',\n  LocalOnly = 'localOnly',\n  None = 'none',\n}\n\nconst builders: Record<string, Readonly<Options>> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  config: {\n    alias: 'c',\n    describe: 'Path to config file',\n    type: 'string',\n    normalize: true,\n  },\n\n  fix: {\n    describe: 'Attempt to fix snap.manifest.json',\n    type: 'boolean',\n  },\n\n  input: {\n    alias: 'i',\n    describe: 'Snap bundle file to evaluate',\n    type: 'string',\n    normalize: true,\n  },\n\n  // Deprecated Browserify options.\n  bundle: {\n    alias: 'b',\n    describe: 'Snap bundle file',\n    type: 'string',\n    normalize: true,\n    deprecated: 'Use --input instead.',\n  },\n\n  dist: {\n    alias: 'd',\n    describe: 'Output directory',\n    type: 'string',\n    normalize: true,\n    deprecated: true,\n  },\n\n  eval: {\n    alias: 'e',\n    describe: 'Attempt to evaluate Snap bundle in SES',\n    type: 'boolean',\n    deprecated: true,\n  },\n\n  manifest: {\n    alias: 'm',\n    describe: 'Validate snap.manifest.json',\n    type: 'boolean',\n    deprecated: true,\n  },\n\n  port: {\n    alias: 'p',\n    describe: 'Local server port for testing',\n    type: 'number',\n    coerce: (arg: unknown) => {\n      const port = Number.parseInt(String(arg), 10);\n      if (Number.isNaN(port)) {\n        throw new Error(`Invalid port: \"${String(arg)}\".`);\n      }\n\n      return port;\n    },\n    deprecated: true,\n  },\n\n  outfileName: {\n    alias: 'n',\n    describe: 'Output file name',\n    type: 'string',\n    deprecated: true,\n  },\n\n  root: {\n    alias: 'r',\n    describe: 'Server root directory',\n    type: 'string',\n    normalize: true,\n    deprecated: true,\n  },\n\n  sourceMaps: {\n    describe: 'Whether builds include sourcemaps',\n    type: 'boolean',\n    deprecated: true,\n  },\n\n  src: {\n    alias: 's',\n    describe: 'Source file',\n    type: 'string',\n    normalize: true,\n    deprecated: true,\n  },\n\n  stripComments: {\n    alias: 'strip',\n    describe: 'Whether to remove code comments from the build output',\n    type: 'boolean',\n    deprecated: true,\n  },\n\n  suppressWarnings: {\n    type: 'boolean',\n    describe: 'Whether to suppress warnings',\n    deprecated: true,\n  },\n\n  transpilationMode: {\n    type: 'string',\n    describe:\n      'Whether to use Babel to transpile all source code (including dependencies), local source code only, or nothing',\n    choices: Object.values(TranspilationModes),\n    deprecated: true,\n  },\n\n  depsToTranspile: {\n    type: 'array',\n    describe: 'Transpile only the listed dependencies.',\n    deprecated: true,\n  },\n\n  verboseErrors: {\n    type: 'boolean',\n    describe: 'Display original errors',\n    deprecated: true,\n  },\n\n  writeManifest: {\n    describe: 'Make necessary changes to the snap manifest file',\n    type: 'boolean',\n    deprecated: true,\n  },\n\n  serve: {\n    describe: 'Serve snap file(s) locally for testing',\n    type: 'boolean',\n    deprecated: true,\n  },\n};\n\nexport default builders;\n"],"names":["TranspilationModes","LocalAndDeps","LocalOnly","None","builders","config","alias","describe","type","normalize","fix","input","bundle","deprecated","dist","eval","manifest","port","coerce","arg","Number","parseInt","String","isNaN","Error","outfileName","root","sourceMaps","src","stripComments","suppressWarnings","transpilationMode","choices","Object","values","depsToTranspile","verboseErrors","writeManifest","serve"],"mappings":"WAEO;UAAKA,kBAAkB;IAAlBA,mBACVC,kBAAe;IADLD,mBAEVE,eAAY;IAFFF,mBAGVG,UAAO;GAHGH,uBAAAA;AAMZ,MAAMI,WAA8C;IAClD,gEAAgE;IAChEC,QAAQ;QACNC,OAAO;QACPC,UAAU;QACVC,MAAM;QACNC,WAAW;IACb;IAEAC,KAAK;QACHH,UAAU;QACVC,MAAM;IACR;IAEAG,OAAO;QACLL,OAAO;QACPC,UAAU;QACVC,MAAM;QACNC,WAAW;IACb;IAEA,iCAAiC;IACjCG,QAAQ;QACNN,OAAO;QACPC,UAAU;QACVC,MAAM;QACNC,WAAW;QACXI,YAAY;IACd;IAEAC,MAAM;QACJR,OAAO;QACPC,UAAU;QACVC,MAAM;QACNC,WAAW;QACXI,YAAY;IACd;IAEAE,MAAM;QACJT,OAAO;QACPC,UAAU;QACVC,MAAM;QACNK,YAAY;IACd;IAEAG,UAAU;QACRV,OAAO;QACPC,UAAU;QACVC,MAAM;QACNK,YAAY;IACd;IAEAI,MAAM;QACJX,OAAO;QACPC,UAAU;QACVC,MAAM;QACNU,QAAQ,CAACC;YACP,MAAMF,OAAOG,OAAOC,QAAQ,CAACC,OAAOH,MAAM;YAC1C,IAAIC,OAAOG,KAAK,CAACN,OAAO;gBACtB,MAAM,IAAIO,MAAM,CAAC,eAAe,EAAEF,OAAOH,KAAK,EAAE,CAAC;YACnD;YAEA,OAAOF;QACT;QACAJ,YAAY;IACd;IAEAY,aAAa;QACXnB,OAAO;QACPC,UAAU;QACVC,MAAM;QACNK,YAAY;IACd;IAEAa,MAAM;QACJpB,OAAO;QACPC,UAAU;QACVC,MAAM;QACNC,WAAW;QACXI,YAAY;IACd;IAEAc,YAAY;QACVpB,UAAU;QACVC,MAAM;QACNK,YAAY;IACd;IAEAe,KAAK;QACHtB,OAAO;QACPC,UAAU;QACVC,MAAM;QACNC,WAAW;QACXI,YAAY;IACd;IAEAgB,eAAe;QACbvB,OAAO;QACPC,UAAU;QACVC,MAAM;QACNK,YAAY;IACd;IAEAiB,kBAAkB;QAChBtB,MAAM;QACND,UAAU;QACVM,YAAY;IACd;IAEAkB,mBAAmB;QACjBvB,MAAM;QACND,UACE;QACFyB,SAASC,OAAOC,MAAM,CAAClC;QACvBa,YAAY;IACd;IAEAsB,iBAAiB;QACf3B,MAAM;QACND,UAAU;QACVM,YAAY;IACd;IAEAuB,eAAe;QACb5B,MAAM;QACND,UAAU;QACVM,YAAY;IACd;IAEAwB,eAAe;QACb9B,UAAU;QACVC,MAAM;QACNK,YAAY;IACd;IAEAyB,OAAO;QACL/B,UAAU;QACVC,MAAM;QACNK,YAAY;IACd;AACF;AAEA,eAAeT,SAAS"}