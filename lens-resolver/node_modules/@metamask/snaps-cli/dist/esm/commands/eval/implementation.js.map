{"version":3,"sources":["../../../../src/commands/eval/implementation.ts"],"sourcesContent":["import { evalBundle, SnapEvalError, indent } from '@metamask/snaps-utils';\nimport { red } from 'chalk';\n\nimport { CommandError } from '../../errors';\n\n/**\n * Evaluate the given bundle in the SES environment. This is a wrapper around\n * {@link evalBundle} that throws a {@link CommandError} if the bundle cannot be\n * evaluated.\n *\n * @param path - The path to the bundle.\n * @throws If the bundle cannot be evaluated.\n */\nexport async function evaluate(path: string) {\n  try {\n    return await evalBundle(path);\n  } catch (evalError) {\n    if (evalError instanceof SnapEvalError) {\n      throw new CommandError(\n        `Failed to evaluate snap bundle in SES. This is likely due to an incompatibility with the SES environment in your snap.\\nReceived the following error from the SES environment:\\n\\n${indent(\n          red(evalError.output.stderr),\n          2,\n        )}`,\n      );\n    }\n\n    // If the error is not a `SnapEvalError`, we don't know what it is, so\n    // we just throw it.\n    throw evalError;\n  }\n}\n"],"names":["evalBundle","SnapEvalError","indent","red","CommandError","evaluate","path","evalError","output","stderr"],"mappings":"AAAA,SAASA,UAAU,EAAEC,aAAa,EAAEC,MAAM,QAAQ,wBAAwB;AAC1E,SAASC,GAAG,QAAQ,QAAQ;AAE5B,SAASC,YAAY,QAAQ,eAAe;AAE5C;;;;;;;CAOC,GACD,OAAO,eAAeC,SAASC,IAAY;IACzC,IAAI;QACF,OAAO,MAAMN,WAAWM;IAC1B,EAAE,OAAOC,WAAW;QAClB,IAAIA,qBAAqBN,eAAe;YACtC,MAAM,IAAIG,aACR,CAAC,kLAAkL,EAAEF,OACnLC,IAAII,UAAUC,MAAM,CAACC,MAAM,GAC3B,GACA,CAAC;QAEP;QAEA,sEAAsE;QACtE,oBAAoB;QACpB,MAAMF;IACR;AACF"}