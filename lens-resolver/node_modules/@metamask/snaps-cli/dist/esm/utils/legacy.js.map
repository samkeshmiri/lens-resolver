{"version":3,"sources":["../../../src/utils/legacy.ts"],"sourcesContent":["import { TranspilationModes } from '../builders';\nimport type { LegacyOptions } from '../config';\n\n/**\n * Get the dependencies to transpile, as well as the regular input file.\n *\n * If `transpilationMode` is not set to `localAndDeps`, this will return an\n * empty array.\n *\n * @param config - The config object.\n * @returns An array with regular expressions of dependencies that should be\n * transpiled.\n */\nexport function processDependencies(config: LegacyOptions) {\n  const { depsToTranspile, transpilationMode } = config;\n  if (transpilationMode === TranspilationModes.LocalAndDeps) {\n    const regex = getDependencyRegExp(depsToTranspile);\n    if (regex !== null) {\n      return [regex];\n    }\n  }\n\n  return [];\n}\n\n/**\n * Processes a string of space delimited dependencies into one RegExp string.\n *\n * @param dependencies - An array of dependencies to add to the RegExp.\n * @returns A RegExp object.\n */\nexport function getDependencyRegExp(dependencies: string[]): RegExp | null {\n  if (!dependencies || dependencies.includes('.') || !dependencies.length) {\n    return null;\n  }\n\n  const paths: string[] = sanitizeDependencyPaths(dependencies);\n  return RegExp(`/node_modules/(?!${paths.join('|')})`, 'u');\n}\n\n/**\n * Helper function to remove any leading and trailing slashes from dependency\n * list.\n *\n * @param dependencies - An array of dependencies to sanitize.\n * @returns An array of sanitized paths.\n */\nexport function sanitizeDependencyPaths(dependencies: string[]): string[] {\n  return dependencies.map((dependency) => {\n    return dependency.replace(/^[/\\\\]+/u, '').replace(/[/\\\\]+$/u, '');\n  });\n}\n"],"names":["TranspilationModes","processDependencies","config","depsToTranspile","transpilationMode","LocalAndDeps","regex","getDependencyRegExp","dependencies","includes","length","paths","sanitizeDependencyPaths","RegExp","join","map","dependency","replace"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,cAAc;AAGjD;;;;;;;;;CASC,GACD,OAAO,SAASC,oBAAoBC,MAAqB;IACvD,MAAM,EAAEC,eAAe,EAAEC,iBAAiB,EAAE,GAAGF;IAC/C,IAAIE,sBAAsBJ,mBAAmBK,YAAY,EAAE;QACzD,MAAMC,QAAQC,oBAAoBJ;QAClC,IAAIG,UAAU,MAAM;YAClB,OAAO;gBAACA;aAAM;QAChB;IACF;IAEA,OAAO,EAAE;AACX;AAEA;;;;;CAKC,GACD,OAAO,SAASC,oBAAoBC,YAAsB;IACxD,IAAI,CAACA,gBAAgBA,aAAaC,QAAQ,CAAC,QAAQ,CAACD,aAAaE,MAAM,EAAE;QACvE,OAAO;IACT;IAEA,MAAMC,QAAkBC,wBAAwBJ;IAChD,OAAOK,OAAO,CAAC,iBAAiB,EAAEF,MAAMG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACxD;AAEA;;;;;;CAMC,GACD,OAAO,SAASF,wBAAwBJ,YAAsB;IAC5D,OAAOA,aAAaO,GAAG,CAAC,CAACC;QACvB,OAAOA,WAAWC,OAAO,CAAC,YAAY,IAAIA,OAAO,CAAC,YAAY;IAChE;AACF"}