{"version":3,"sources":["../../src/logging.ts"],"sourcesContent":["import { createProjectLogger } from '@metamask/utils';\n\n// The global logger used across the monorepo. Other projects should use this\n// to create a module logger.\nexport const snapsLogger = createProjectLogger('snaps');\n\n/**\n * Log a message. Currently, this is just a wrapper around `console.log`, but\n * the implementation may change in the future. These logs will be included in\n * production builds, so they should be used sparingly, and not contain any\n * sensitive information.\n *\n * This function makes it easy to swap out the logging implementation in all\n * files at once.\n *\n * @param message - The message to log.\n * @param optionalParams - Additional parameters to pass to the logging.\n */\nexport function logInfo(message: string, ...optionalParams: unknown[]): void {\n  // eslint-disable-next-line no-console\n  console.log(message, ...optionalParams);\n}\n\n/**\n * Log an error. Currently, this is just a wrapper around `console.error`, but\n * the implementation may change in the future. These logs will be included in\n * production builds, so they should be used sparingly, and not contain any\n * sensitive information.\n *\n * These logs should always be visible, without requiring the user to enable\n * verbose logging (like setting a `DEBUG` environment variable), as they are\n * important for debugging snaps.\n *\n * This function makes it easy to swap out the logging implementation in all\n * files at once.\n *\n * @param error - The error to log.\n * @param optionalParams - Additional parameters to pass to the logging.\n */\nexport function logError(error: unknown, ...optionalParams: unknown[]): void {\n  // eslint-disable-next-line no-console\n  console.error(error, ...optionalParams);\n}\n\n/**\n * Log a warning. Currently, this is just a wrapper around `console.warn`, but\n * the implementation may change in the future. These logs will be included in\n * production builds, so they should be used sparingly, and not contain any\n * sensitive information.\n *\n * These logs should always be visible, without requiring the user to enable\n * verbose logging (like setting a `DEBUG` environment variable), as they are\n * important for debugging snaps.\n *\n * This function makes it easy to swap out the logging implementation in all\n * files at once.\n *\n * @param message - The message to log.\n * @param optionalParams - Additional parameters to pass to the logging.\n */\nexport function logWarning(\n  message: string,\n  ...optionalParams: unknown[]\n): void {\n  // eslint-disable-next-line no-console\n  console.warn(message, ...optionalParams);\n}\n"],"names":["createProjectLogger","snapsLogger","logInfo","message","optionalParams","console","log","logError","error","logWarning","warn"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,kBAAkB;AAEtD,6EAA6E;AAC7E,6BAA6B;AAC7B,OAAO,MAAMC,cAAcD,oBAAoB,SAAS;AAExD;;;;;;;;;;;CAWC,GACD,OAAO,SAASE,QAAQC,OAAe,EAAE,GAAGC,cAAyB;IACnE,sCAAsC;IACtCC,QAAQC,GAAG,CAACH,YAAYC;AAC1B;AAEA;;;;;;;;;;;;;;;CAeC,GACD,OAAO,SAASG,SAASC,KAAc,EAAE,GAAGJ,cAAyB;IACnE,sCAAsC;IACtCC,QAAQG,KAAK,CAACA,UAAUJ;AAC1B;AAEA;;;;;;;;;;;;;;;CAeC,GACD,OAAO,SAASK,WACdN,OAAe,EACf,GAAGC,cAAyB;IAE5B,sCAAsC;IACtCC,QAAQK,IAAI,CAACP,YAAYC;AAC3B"}