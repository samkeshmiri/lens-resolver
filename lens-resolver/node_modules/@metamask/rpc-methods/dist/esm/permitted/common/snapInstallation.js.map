{"version":3,"sources":["../../../../src/permitted/common/snapInstallation.ts"],"sourcesContent":["import type { RequestedPermissions } from '@metamask/permission-controller';\nimport type { InstallSnapsResult } from '@metamask/snaps-utils';\nimport { isObject } from '@metamask/utils';\nimport { ethErrors } from 'eth-rpc-errors';\n\nexport type { InstallSnapsResult } from '@metamask/snaps-utils';\n\nexport type InstallSnapsHook = (\n  requestedSnaps: RequestedPermissions,\n) => Promise<InstallSnapsResult>;\n\n/**\n * Typechecks the requested snaps and passes them to the permissions\n * controller for installation.\n *\n * @param requestedSnaps - An object containing the requested snaps to be installed. The key of the\n * object is the snap id and the value is potential extra data, i.e. version.\n * @param installSnaps - A function that tries to install a given snap, prompting the user if\n * necessary.\n * @returns An object containing the installed snaps.\n * @throws If the params are invalid or the snap installation fails.\n */\nexport async function handleInstallSnaps(\n  requestedSnaps: RequestedPermissions,\n  installSnaps: InstallSnapsHook,\n): Promise<InstallSnapsResult> {\n  if (!isObject(requestedSnaps)) {\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid snap installation params.`,\n      data: { requestedSnaps },\n    });\n  } else if (Object.keys(requestedSnaps).length === 0) {\n    throw ethErrors.rpc.invalidParams({\n      message: `Must specify at least one snap to install.`,\n      data: { requestedSnaps },\n    });\n  }\n\n  // installSnaps is bound to the origin\n  return await installSnaps(requestedSnaps);\n}\n"],"names":["isObject","ethErrors","handleInstallSnaps","requestedSnaps","installSnaps","rpc","invalidParams","message","data","Object","keys","length"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,iBAAiB;AAQ3C;;;;;;;;;;CAUC,GACD,OAAO,eAAeC,mBACpBC,cAAoC,EACpCC,YAA8B;IAE9B,IAAI,CAACJ,SAASG,iBAAiB;QAC7B,MAAMF,UAAUI,GAAG,CAACC,aAAa,CAAC;YAChCC,SAAS,CAAC,iCAAiC,CAAC;YAC5CC,MAAM;gBAAEL;YAAe;QACzB;IACF,OAAO,IAAIM,OAAOC,IAAI,CAACP,gBAAgBQ,MAAM,KAAK,GAAG;QACnD,MAAMV,UAAUI,GAAG,CAACC,aAAa,CAAC;YAChCC,SAAS,CAAC,0CAA0C,CAAC;YACrDC,MAAM;gBAAEL;YAAe;QACzB;IACF;IAEA,sCAAsC;IACtC,OAAO,MAAMC,aAAaD;AAC5B"}