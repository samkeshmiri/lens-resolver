{"version":3,"file":"mergeMiddleware.js","sourceRoot":"","sources":["../src/mergeMiddleware.ts"],"names":[],"mappings":";;;AAEA,mDAAmE;AAEnE;;;;;GAKG;AACH,SAAgB,eAAe,CAC7B,eAAyD;IAEzD,MAAM,MAAM,GAAG,IAAI,6BAAa,EAAE,CAAC;IACnC,eAAe,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IACjE,OAAO,MAAM,CAAC,YAAY,EAAE,CAAC;AAC/B,CAAC;AAND,0CAMC","sourcesContent":["import { Json, JsonRpcParams } from '@metamask/utils';\n\nimport { JsonRpcEngine, JsonRpcMiddleware } from './JsonRpcEngine';\n\n/**\n * Takes a stack of middleware and joins them into a single middleware function.\n *\n * @param middlewareStack - The middleware stack to merge.\n * @returns The merged middleware function.\n */\nexport function mergeMiddleware(\n  middlewareStack: JsonRpcMiddleware<JsonRpcParams, Json>[],\n) {\n  const engine = new JsonRpcEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n"]}