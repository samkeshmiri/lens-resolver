{"version":3,"sources":["../../../../src/common/lockdown/lockdown-events.ts"],"sourcesContent":["// When creating a sandbox, limitation of the events from leaking\n// sensitive objects is required. This is done by overriding own properties\n// of prototypes of all existing events.\nimport { hasProperty } from '@metamask/utils';\n\n/**\n * Targeted Event objects and properties.\n * Note: This is a map of the prototypes that inherit from Events with\n * properties that are identified to leak sensitive objects.\n * Not all browsers support all event types, so checking its existence is required.\n */\nconst targetEvents = new Map();\nif (hasProperty(globalThis, 'UIEvent')) {\n  targetEvents.set(UIEvent.prototype, ['view']);\n}\nif (hasProperty(globalThis, 'MutationEvent')) {\n  targetEvents.set(MutationEvent.prototype, ['relatedNode']);\n}\nif (hasProperty(globalThis, 'MessageEvent')) {\n  targetEvents.set(MessageEvent.prototype, ['source']);\n}\nif (hasProperty(globalThis, 'FocusEvent')) {\n  targetEvents.set(FocusEvent.prototype, ['relatedTarget']);\n}\nif (hasProperty(globalThis, 'MouseEvent')) {\n  targetEvents.set(MouseEvent.prototype, [\n    'relatedTarget',\n    'fromElement',\n    'toElement',\n  ]);\n}\nif (hasProperty(globalThis, 'TouchEvent')) {\n  targetEvents.set(TouchEvent.prototype, ['targetTouches', 'touches']);\n}\nif (hasProperty(globalThis, 'Event')) {\n  targetEvents.set(Event.prototype, [\n    'target',\n    'currentTarget',\n    'srcElement',\n    'composedPath',\n  ]);\n}\n\n/**\n * Attenuate Event objects by replacing its own properties.\n */\nexport function executeLockdownEvents() {\n  targetEvents.forEach((properties, prototype) => {\n    for (const property of properties) {\n      Object.defineProperty(prototype, property, {\n        value: undefined,\n        configurable: false,\n        writable: false,\n      });\n    }\n  });\n}\n"],"names":["executeLockdownEvents","targetEvents","Map","hasProperty","globalThis","set","UIEvent","prototype","MutationEvent","MessageEvent","FocusEvent","MouseEvent","TouchEvent","Event","forEach","properties","property","Object","defineProperty","value","undefined","configurable","writable"],"mappings":"AAAA,iEAAiE;AACjE,2EAA2E;AAC3E,wCAAwC;;;;;+BA4CxBA;;;eAAAA;;;uBA3CY;AAE5B;;;;;CAKC,GACD,MAAMC,eAAe,IAAIC;AACzB,IAAIC,IAAAA,kBAAW,EAACC,YAAY,YAAY;IACtCH,aAAaI,GAAG,CAACC,QAAQC,SAAS,EAAE;QAAC;KAAO;AAC9C;AACA,IAAIJ,IAAAA,kBAAW,EAACC,YAAY,kBAAkB;IAC5CH,aAAaI,GAAG,CAACG,cAAcD,SAAS,EAAE;QAAC;KAAc;AAC3D;AACA,IAAIJ,IAAAA,kBAAW,EAACC,YAAY,iBAAiB;IAC3CH,aAAaI,GAAG,CAACI,aAAaF,SAAS,EAAE;QAAC;KAAS;AACrD;AACA,IAAIJ,IAAAA,kBAAW,EAACC,YAAY,eAAe;IACzCH,aAAaI,GAAG,CAACK,WAAWH,SAAS,EAAE;QAAC;KAAgB;AAC1D;AACA,IAAIJ,IAAAA,kBAAW,EAACC,YAAY,eAAe;IACzCH,aAAaI,GAAG,CAACM,WAAWJ,SAAS,EAAE;QACrC;QACA;QACA;KACD;AACH;AACA,IAAIJ,IAAAA,kBAAW,EAACC,YAAY,eAAe;IACzCH,aAAaI,GAAG,CAACO,WAAWL,SAAS,EAAE;QAAC;QAAiB;KAAU;AACrE;AACA,IAAIJ,IAAAA,kBAAW,EAACC,YAAY,UAAU;IACpCH,aAAaI,GAAG,CAACQ,MAAMN,SAAS,EAAE;QAChC;QACA;QACA;QACA;KACD;AACH;AAKO,SAASP;IACdC,aAAaa,OAAO,CAAC,CAACC,YAAYR;QAChC,KAAK,MAAMS,YAAYD,WAAY;YACjCE,OAAOC,cAAc,CAACX,WAAWS,UAAU;gBACzCG,OAAOC;gBACPC,cAAc;gBACdC,UAAU;YACZ;QACF;IACF;AACF"}