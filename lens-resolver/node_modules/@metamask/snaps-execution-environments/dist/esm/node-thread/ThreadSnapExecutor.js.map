{"version":3,"sources":["../../../src/node-thread/ThreadSnapExecutor.ts"],"sourcesContent":["import ObjectMultiplex from '@metamask/object-multiplex';\nimport { ThreadMessageStream } from '@metamask/post-message-stream';\nimport { logError, SNAP_STREAM_NAMES } from '@metamask/snaps-utils';\nimport pump from 'pump';\n\nimport { BaseSnapExecutor } from '../common/BaseSnapExecutor';\nimport { log } from '../logging';\n\nexport class ThreadSnapExecutor extends BaseSnapExecutor {\n  static initialize() {\n    log('Worker: Connecting to parent.');\n\n    const parentStream = new ThreadMessageStream();\n    const mux = new ObjectMultiplex();\n    pump(parentStream, mux as any, parentStream, (error) => {\n      if (error) {\n        logError(`Parent stream failure, closing worker.`, error);\n      }\n      self.close();\n    });\n\n    const commandStream = mux.createStream(SNAP_STREAM_NAMES.COMMAND);\n    const rpcStream = mux.createStream(SNAP_STREAM_NAMES.JSON_RPC) as any;\n    return new ThreadSnapExecutor(commandStream, rpcStream);\n  }\n}\n"],"names":["ObjectMultiplex","ThreadMessageStream","logError","SNAP_STREAM_NAMES","pump","BaseSnapExecutor","log","ThreadSnapExecutor","initialize","parentStream","mux","error","self","close","commandStream","createStream","COMMAND","rpcStream","JSON_RPC"],"mappings":"AAAA,OAAOA,qBAAqB,6BAA6B;AACzD,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,QAAQ,EAAEC,iBAAiB,QAAQ,wBAAwB;AACpE,OAAOC,UAAU,OAAO;AAExB,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,GAAG,QAAQ,aAAa;AAEjC,OAAO,MAAMC,2BAA2BF;IACtC,OAAOG,aAAa;QAClBF,IAAI;QAEJ,MAAMG,eAAe,IAAIR;QACzB,MAAMS,MAAM,IAAIV;QAChBI,KAAKK,cAAcC,KAAYD,cAAc,CAACE;YAC5C,IAAIA,OAAO;gBACTT,SAAS,CAAC,sCAAsC,CAAC,EAAES;YACrD;YACAC,KAAKC,KAAK;QACZ;QAEA,MAAMC,gBAAgBJ,IAAIK,YAAY,CAACZ,kBAAkBa,OAAO;QAChE,MAAMC,YAAYP,IAAIK,YAAY,CAACZ,kBAAkBe,QAAQ;QAC7D,OAAO,IAAIX,mBAAmBO,eAAeG;IAC/C;AACF"}