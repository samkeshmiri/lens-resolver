"use strict";
exports.__esModule = true;
exports.addPageInfoFields = void 0;
var cursor_1 = require("./cursor");
function getPageInfo(cursorName) {
    return {
        kind: 'Field',
        alias: {
            kind: 'Name',
            value: (0, cursor_1.createPginationFieldAlias)(cursorName)
        },
        name: {
            kind: 'Name',
            value: 'pageInfo'
        },
        selectionSet: {
            kind: 'SelectionSet',
            selections: [
                {
                    kind: 'Field',
                    name: {
                        kind: 'Name',
                        value: 'prevCursor'
                    }
                },
                {
                    kind: 'Field',
                    name: {
                        kind: 'Name',
                        value: 'nextCursor'
                    }
                },
            ]
        }
    };
}
function addPageInfoFields(query, cursorName) {
    var _a;
    var fields = (_a = query === null || query === void 0 ? void 0 : query.selectionSet) === null || _a === void 0 ? void 0 : _a.selections;
    if (fields) {
        // eslint-disable-next-line
        // @ts-ignore
        fields.push(getPageInfo(cursorName));
    }
}
exports.addPageInfoFields = addPageInfoFields;
//# sourceMappingURL=addPageInfoFields.js.map