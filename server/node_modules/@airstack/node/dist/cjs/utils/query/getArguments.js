"use strict";
exports.__esModule = true;
exports.getArguments = void 0;
var arguments_1 = require("./arguments");
var getFieldType_1 = require("./getFieldType");
function getArguments(schemaMap, fieldNode, ctx) {
    var _a;
    var queryName = fieldNode.name.value;
    var queryInputTypeName = queryName.toLowerCase() + "input";
    var queryInputType = schemaMap[queryInputTypeName];
    var input = (_a = fieldNode.arguments) === null || _a === void 0 ? void 0 : _a.find(function (a) { return a.name.value === "input"; });
    var inputFields = (input === null || input === void 0 ? void 0 : input.value).fields;
    var userInputsArgs = [];
    // get type of arguments from queryInputType and store in argumetentType
    queryInputType === null || queryInputType === void 0 ? void 0 : queryInputType.inputFields.forEach(function (inputField) {
        var inputName = inputField.name;
        var argument = inputFields.find(function (arg) { return arg.value.kind !== "Variable" && arg.name.value === inputName; });
        if (argument) {
            userInputsArgs.push(inputField);
        }
    });
    var args = (0, arguments_1.getArgumentsFromInput)(inputFields, ctx);
    args.forEach(function (input) {
        var _a = (0, getFieldType_1.getFieldType)(schemaMap, queryInputType.inputFields, input.path), type = _a[0], isRequied = _a[1];
        input.type = type;
        input.isRequired = isRequied;
    });
    return {
        args: args,
        inputFields: inputFields
    };
}
exports.getArguments = getArguments;
//# sourceMappingURL=getArguments.js.map