import { config } from '../config';
import { AIRSTACK_ENDPOINT } from '../constants';
import fetch from './fetch';
export async function _fetch(query, variables) {
    if (!config.authKey) {
        return [null, Error('No API key provided')];
    }
    try {
        const res = await fetch(AIRSTACK_ENDPOINT, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                Authorization: config.authKey,
            },
            body: JSON.stringify({
                query,
                variables,
            }),
        });
        const json = (await res.json());
        const data = json === null || json === void 0 ? void 0 : json.data;
        let error = null;
        if (json.errors) {
            error = json.errors;
        }
        return [data, error];
    }
    catch (error) {
        return [
            null,
            (error === null || error === void 0 ? void 0 : error.message) || 'Unable to fetch data',
        ];
    }
}
export async function fetchGql(query, variables) {
    return _fetch(query, variables);
}
//# sourceMappingURL=fetcher.js.map